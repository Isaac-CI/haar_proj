-- ==============================================================
-- Generated by Vitis HLS v2024.2
-- Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
-- ==============================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity detectFaces_int_sqrt is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    value_r : IN STD_LOGIC_VECTOR (30 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (15 downto 0) );
end;


architecture behav of detectFaces_int_sqrt is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal a_790_fu_222_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_790_reg_1411 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_3_fu_240_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_3_reg_1417 : STD_LOGIC_VECTOR (4 downto 0);
    signal b_1_fu_248_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_1_reg_1422 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln3376_1_fu_266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3376_1_reg_1427 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln3371_1_reg_1433 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_2_reg_1438 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_3_reg_1443 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_4_reg_1448 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_5_reg_1453 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_6_reg_1458 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_7_reg_1463 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_8_reg_1468 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_9_reg_1473 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_s_reg_1479 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_10_reg_1485 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln3371_11_reg_1491 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_793_fu_425_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_793_reg_1497 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal xor_ln3376_2_fu_465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3376_2_reg_1503 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_8_fu_477_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_8_reg_1508 : STD_LOGIC_VECTOR (8 downto 0);
    signal a_799_fu_574_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_799_reg_1513 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal c_12_fu_582_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal c_12_reg_1519 : STD_LOGIC_VECTOR (13 downto 0);
    signal b_4_fu_589_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal b_4_reg_1524 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln3376_4_fu_601_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3376_4_reg_1529 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_17_fu_715_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal c_17_reg_1534 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal a_805_fu_723_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_805_reg_1539 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_808_fu_796_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_808_reg_1546 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal c_21_fu_804_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal c_21_reg_1552 : STD_LOGIC_VECTOR (22 downto 0);
    signal b_7_fu_811_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal b_7_reg_1557 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln3376_7_fu_823_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3376_7_reg_1562 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_26_fu_937_p3 : STD_LOGIC_VECTOR (26 downto 0);
    signal c_26_reg_1567 : STD_LOGIC_VECTOR (26 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal a_814_fu_945_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_814_reg_1572 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_817_fu_1018_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal a_817_reg_1579 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal or_ln_fu_1037_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal or_ln_reg_1585 : STD_LOGIC_VECTOR (29 downto 0);
    signal icmp_ln3376_10_fu_1060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3376_10_reg_1590 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_31_fu_1066_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal c_31_reg_1595 : STD_LOGIC_VECTOR (29 downto 0);
    signal c_35_fu_1173_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal c_35_reg_1600 : STD_LOGIC_VECTOR (29 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal a_823_fu_1181_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal a_823_reg_1605 : STD_LOGIC_VECTOR (12 downto 0);
    signal trunc_ln3371_13_fu_1189_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln3371_13_reg_1612 : STD_LOGIC_VECTOR (27 downto 0);
    signal a_826_fu_1260_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal a_826_reg_1617 : STD_LOGIC_VECTOR (13 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln3371_14_fu_1268_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln3371_14_reg_1623 : STD_LOGIC_VECTOR (27 downto 0);
    signal b_13_fu_1279_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal b_13_reg_1628 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln3376_13_fu_1291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln3376_13_reg_1633 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_fu_150_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_fu_164_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln3364_fu_160_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal b_fu_180_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln3376_fu_188_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3376_fu_194_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_1_fu_200_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_789_fu_206_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_fu_172_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal c_2_fu_214_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln4_fu_230_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal zext_ln3364_2_fu_256_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln3376_1_fu_260_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln3364_fu_392_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln3364_1_fu_402_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_4_fu_405_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_792_fu_411_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal a_791_fu_395_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal c_5_fu_418_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_6_fu_432_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal b_2_fu_443_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln3364_4_fu_455_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln3376_2_fu_459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln3364_1_fu_439_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln3364_3_fu_451_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_7_fu_471_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal a_795_fu_492_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal a_794_fu_485_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal c_9_fu_506_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal a_796_fu_499_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal b_3_fu_524_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln3364_6_fu_536_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal icmp_ln3376_3_fu_540_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln3364_2_fu_512_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3364_5_fu_532_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal xor_ln3376_3_fu_546_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_10_fu_552_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal a_798_fu_558_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal a_797_fu_516_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal c_11_fu_566_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3364_8_fu_597_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln3364_3_fu_607_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln3364_7_fu_617_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal xor_ln3376_4_fu_620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_13_fu_625_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal a_801_fu_631_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal a_800_fu_610_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal c_14_fu_638_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal c_15_fu_654_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal a_802_fu_646_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal b_5_fu_673_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln3364_10_fu_685_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln3376_5_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln3364_4_fu_661_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln3364_9_fu_681_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal xor_ln3376_5_fu_695_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_16_fu_701_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal a_804_fu_707_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal a_803_fu_665_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal c_18_fu_731_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal b_6_fu_748_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln3364_12_fu_759_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal icmp_ln3376_6_fu_763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln3364_5_fu_737_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln3364_11_fu_755_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal xor_ln3376_6_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_19_fu_775_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal a_807_fu_781_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal a_806_fu_741_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal c_20_fu_788_p3 : STD_LOGIC_VECTOR (20 downto 0);
    signal zext_ln3364_14_fu_819_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sext_ln3364_6_fu_829_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln3364_13_fu_839_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal xor_ln3376_7_fu_842_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_22_fu_847_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal a_810_fu_853_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal a_809_fu_832_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal c_23_fu_860_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal c_24_fu_876_p3 : STD_LOGIC_VECTOR (25 downto 0);
    signal a_811_fu_868_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal b_8_fu_895_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln3364_16_fu_907_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal icmp_ln3376_8_fu_911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln3364_7_fu_883_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln3364_15_fu_903_p1 : STD_LOGIC_VECTOR (26 downto 0);
    signal xor_ln3376_8_fu_917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_25_fu_923_p2 : STD_LOGIC_VECTOR (26 downto 0);
    signal a_813_fu_929_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal a_812_fu_887_p3 : STD_LOGIC_VECTOR (9 downto 0);
    signal c_27_fu_953_p3 : STD_LOGIC_VECTOR (28 downto 0);
    signal b_9_fu_970_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln3364_18_fu_981_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal icmp_ln3376_9_fu_985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sext_ln3364_8_fu_959_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln3364_17_fu_977_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3376_9_fu_991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_28_fu_997_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal a_816_fu_1003_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal a_815_fu_963_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal c_29_fu_1010_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln3371_fu_1026_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal b_10_fu_1044_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal c_30_fu_1030_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3364_19_fu_1052_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3364_20_fu_1056_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3376_10_fu_1079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal a_819_fu_1084_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal a_818_fu_1072_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal c_32_fu_1091_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln3371_12_fu_1105_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal a_820_fu_1097_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal b_11_fu_1131_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal c_33_fu_1109_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3364_21_fu_1139_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln3376_11_fu_1147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln3364_1_fu_1116_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln3364_22_fu_1143_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3376_11_fu_1153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_34_fu_1159_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal a_822_fu_1165_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal a_821_fu_1123_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal b_12_fu_1212_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal c_36_fu_1193_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3364_23_fu_1219_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln3376_12_fu_1227_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln3364_2_fu_1199_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln3364_24_fu_1223_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3376_12_fu_1233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_37_fu_1239_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal a_825_fu_1245_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal a_824_fu_1205_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal c_38_fu_1252_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal c_39_fu_1272_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3364_25_fu_1287_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal or_ln3364_3_fu_1300_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal zext_ln3364_26_fu_1313_p1 : STD_LOGIC_VECTOR (29 downto 0);
    signal xor_ln3376_13_fu_1316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal c_40_fu_1321_p2 : STD_LOGIC_VECTOR (29 downto 0);
    signal a_828_fu_1327_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal a_827_fu_1306_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal c_41_fu_1334_p3 : STD_LOGIC_VECTOR (29 downto 0);
    signal trunc_ln3360_fu_1297_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal a_829_fu_1342_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal b_14_fu_1366_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal c_42_fu_1350_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln3364_27_fu_1374_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln3376_14_fu_1378_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln3376_14_fu_1384_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1_fu_1390_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal a_830_fu_1358_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                a_790_reg_1411 <= a_790_fu_222_p3;
                    b_1_reg_1422(3 downto 2) <= b_1_fu_248_p3(3 downto 2);
                c_3_reg_1417 <= c_3_fu_240_p3;
                trunc_ln3371_10_reg_1485 <= value_r(5 downto 4);
                trunc_ln3371_11_reg_1491 <= value_r(3 downto 2);
                trunc_ln3371_1_reg_1433 <= value_r(25 downto 24);
                trunc_ln3371_2_reg_1438 <= value_r(23 downto 22);
                trunc_ln3371_3_reg_1443 <= value_r(21 downto 20);
                trunc_ln3371_4_reg_1448 <= value_r(19 downto 18);
                trunc_ln3371_5_reg_1453 <= value_r(17 downto 16);
                trunc_ln3371_6_reg_1458 <= value_r(15 downto 14);
                trunc_ln3371_7_reg_1463 <= value_r(13 downto 12);
                trunc_ln3371_8_reg_1468 <= value_r(11 downto 10);
                trunc_ln3371_9_reg_1473 <= value_r(9 downto 8);
                trunc_ln3371_s_reg_1479 <= value_r(7 downto 6);
                xor_ln3376_1_reg_1427 <= xor_ln3376_1_fu_266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                a_793_reg_1497 <= a_793_fu_425_p3;
                c_8_reg_1508 <= c_8_fu_477_p3;
                xor_ln3376_2_reg_1503 <= xor_ln3376_2_fu_465_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                a_799_reg_1513 <= a_799_fu_574_p3;
                    b_4_reg_1524(6 downto 2) <= b_4_fu_589_p3(6 downto 2);
                c_12_reg_1519 <= c_12_fu_582_p3;
                icmp_ln3376_4_reg_1529 <= icmp_ln3376_4_fu_601_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                a_805_reg_1539 <= a_805_fu_723_p3;
                c_17_reg_1534 <= c_17_fu_715_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                a_808_reg_1546 <= a_808_fu_796_p3;
                    b_7_reg_1557(9 downto 2) <= b_7_fu_811_p3(9 downto 2);
                c_21_reg_1552 <= c_21_fu_804_p3;
                icmp_ln3376_7_reg_1562 <= icmp_ln3376_7_fu_823_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                a_814_reg_1572 <= a_814_fu_945_p3;
                c_26_reg_1567 <= c_26_fu_937_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                a_817_reg_1579 <= a_817_fu_1018_p3;
                c_31_reg_1595 <= c_31_fu_1066_p2;
                icmp_ln3376_10_reg_1590 <= icmp_ln3376_10_fu_1060_p2;
                or_ln_reg_1585 <= or_ln_fu_1037_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                a_823_reg_1605 <= a_823_fu_1181_p3;
                c_35_reg_1600 <= c_35_fu_1173_p3;
                trunc_ln3371_13_reg_1612 <= trunc_ln3371_13_fu_1189_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                a_826_reg_1617 <= a_826_fu_1260_p3;
                    b_13_reg_1628(15 downto 2) <= b_13_fu_1279_p3(15 downto 2);
                icmp_ln3376_13_reg_1633 <= icmp_ln3376_13_fu_1291_p2;
                trunc_ln3371_14_reg_1623 <= trunc_ln3371_14_fu_1268_p1;
            end if;
        end if;
    end process;
    b_1_reg_1422(1 downto 0) <= "01";
    b_4_reg_1524(1 downto 0) <= "01";
    b_7_reg_1557(1 downto 0) <= "01";
    b_13_reg_1628(1 downto 0) <= "01";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    a_789_fu_206_p3 <= (tmp_fu_164_p3 & ap_const_lv1_1);
    a_790_fu_222_p3 <= 
        a_789_fu_206_p3 when (xor_ln3376_fu_194_p2(0) = '1') else 
        a_fu_172_p3;
    a_791_fu_395_p3 <= (a_790_reg_1411 & ap_const_lv1_0);
    a_792_fu_411_p3 <= (a_790_reg_1411 & ap_const_lv1_1);
    a_793_fu_425_p3 <= 
        a_792_fu_411_p3 when (xor_ln3376_1_reg_1427(0) = '1') else 
        a_791_fu_395_p3;
    a_794_fu_485_p3 <= (a_793_reg_1497 & ap_const_lv1_0);
    a_795_fu_492_p3 <= (a_793_reg_1497 & ap_const_lv1_1);
    a_796_fu_499_p3 <= 
        a_795_fu_492_p3 when (xor_ln3376_2_reg_1503(0) = '1') else 
        a_794_fu_485_p3;
    a_797_fu_516_p3 <= (a_796_fu_499_p3 & ap_const_lv1_0);
    a_798_fu_558_p3 <= (a_796_fu_499_p3 & ap_const_lv1_1);
    a_799_fu_574_p3 <= 
        a_798_fu_558_p3 when (xor_ln3376_3_fu_546_p2(0) = '1') else 
        a_797_fu_516_p3;
    a_800_fu_610_p3 <= (a_799_reg_1513 & ap_const_lv1_0);
    a_801_fu_631_p3 <= (a_799_reg_1513 & ap_const_lv1_1);
    a_802_fu_646_p3 <= 
        a_801_fu_631_p3 when (xor_ln3376_4_fu_620_p2(0) = '1') else 
        a_800_fu_610_p3;
    a_803_fu_665_p3 <= (a_802_fu_646_p3 & ap_const_lv1_0);
    a_804_fu_707_p3 <= (a_802_fu_646_p3 & ap_const_lv1_1);
    a_805_fu_723_p3 <= 
        a_804_fu_707_p3 when (xor_ln3376_5_fu_695_p2(0) = '1') else 
        a_803_fu_665_p3;
    a_806_fu_741_p3 <= (a_805_reg_1539 & ap_const_lv1_0);
    a_807_fu_781_p3 <= (a_805_reg_1539 & ap_const_lv1_1);
    a_808_fu_796_p3 <= 
        a_807_fu_781_p3 when (xor_ln3376_6_fu_769_p2(0) = '1') else 
        a_806_fu_741_p3;
    a_809_fu_832_p3 <= (a_808_reg_1546 & ap_const_lv1_0);
    a_810_fu_853_p3 <= (a_808_reg_1546 & ap_const_lv1_1);
    a_811_fu_868_p3 <= 
        a_810_fu_853_p3 when (xor_ln3376_7_fu_842_p2(0) = '1') else 
        a_809_fu_832_p3;
    a_812_fu_887_p3 <= (a_811_fu_868_p3 & ap_const_lv1_0);
    a_813_fu_929_p3 <= (a_811_fu_868_p3 & ap_const_lv1_1);
    a_814_fu_945_p3 <= 
        a_813_fu_929_p3 when (xor_ln3376_8_fu_917_p2(0) = '1') else 
        a_812_fu_887_p3;
    a_815_fu_963_p3 <= (a_814_reg_1572 & ap_const_lv1_0);
    a_816_fu_1003_p3 <= (a_814_reg_1572 & ap_const_lv1_1);
    a_817_fu_1018_p3 <= 
        a_816_fu_1003_p3 when (xor_ln3376_9_fu_991_p2(0) = '1') else 
        a_815_fu_963_p3;
    a_818_fu_1072_p3 <= (a_817_reg_1579 & ap_const_lv1_0);
    a_819_fu_1084_p3 <= (a_817_reg_1579 & ap_const_lv1_1);
    a_820_fu_1097_p3 <= 
        a_819_fu_1084_p3 when (xor_ln3376_10_fu_1079_p2(0) = '1') else 
        a_818_fu_1072_p3;
    a_821_fu_1123_p3 <= (a_820_fu_1097_p3 & ap_const_lv1_0);
    a_822_fu_1165_p3 <= (a_820_fu_1097_p3 & ap_const_lv1_1);
    a_823_fu_1181_p3 <= 
        a_822_fu_1165_p3 when (xor_ln3376_11_fu_1153_p2(0) = '1') else 
        a_821_fu_1123_p3;
    a_824_fu_1205_p3 <= (a_823_reg_1605 & ap_const_lv1_0);
    a_825_fu_1245_p3 <= (a_823_reg_1605 & ap_const_lv1_1);
    a_826_fu_1260_p3 <= 
        a_825_fu_1245_p3 when (xor_ln3376_12_fu_1233_p2(0) = '1') else 
        a_824_fu_1205_p3;
    a_827_fu_1306_p3 <= (a_826_reg_1617 & ap_const_lv1_0);
    a_828_fu_1327_p3 <= (a_826_reg_1617 & ap_const_lv1_1);
    a_829_fu_1342_p3 <= 
        a_828_fu_1327_p3 when (xor_ln3376_13_fu_1316_p2(0) = '1') else 
        a_827_fu_1306_p3;
    a_830_fu_1358_p3 <= (a_829_fu_1342_p3 & ap_const_lv1_0);
    a_fu_172_p3 <= (tmp_fu_164_p3 & ap_const_lv1_0);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state1_blk_assign_proc : process(ap_start)
    begin
        if ((ap_start = ap_const_logic_0)) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state2_blk <= ap_const_logic_0;
    ap_ST_fsm_state3_blk <= ap_const_logic_0;
    ap_ST_fsm_state4_blk <= ap_const_logic_0;
    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    ap_return <= 
        or_ln1_fu_1390_p3 when (xor_ln3376_14_fu_1384_p2(0) = '1') else 
        a_830_fu_1358_p3;
    b_10_fu_1044_p3 <= (a_817_fu_1018_p3 & ap_const_lv2_1);
    b_11_fu_1131_p3 <= (a_820_fu_1097_p3 & ap_const_lv2_1);
    b_12_fu_1212_p3 <= (a_823_reg_1605 & ap_const_lv2_1);
    b_13_fu_1279_p3 <= (a_826_fu_1260_p3 & ap_const_lv2_1);
    b_14_fu_1366_p3 <= (a_829_fu_1342_p3 & ap_const_lv2_1);
    b_1_fu_248_p3 <= (a_790_fu_222_p3 & ap_const_lv2_1);
    b_2_fu_443_p3 <= (a_793_fu_425_p3 & ap_const_lv2_1);
    b_3_fu_524_p3 <= (a_796_fu_499_p3 & ap_const_lv2_1);
    b_4_fu_589_p3 <= (a_799_fu_574_p3 & ap_const_lv2_1);
    b_5_fu_673_p3 <= (a_802_fu_646_p3 & ap_const_lv2_1);
    b_6_fu_748_p3 <= (a_805_reg_1539 & ap_const_lv2_1);
    b_7_fu_811_p3 <= (a_808_fu_796_p3 & ap_const_lv2_1);
    b_8_fu_895_p3 <= (a_811_fu_868_p3 & ap_const_lv2_1);
    b_9_fu_970_p3 <= (a_814_reg_1572 & ap_const_lv2_1);
    b_fu_180_p3 <= (tmp_fu_164_p3 & ap_const_lv2_1);
    c_10_fu_552_p2 <= std_logic_vector(signed(sext_ln3364_2_fu_512_p1) - signed(zext_ln3364_5_fu_532_p1));
    c_11_fu_566_p3 <= 
        c_10_fu_552_p2 when (xor_ln3376_3_fu_546_p2(0) = '1') else 
        sext_ln3364_2_fu_512_p1;
    c_12_fu_582_p3 <= (c_11_fu_566_p3 & trunc_ln3371_3_reg_1443);
    c_13_fu_625_p2 <= std_logic_vector(signed(sext_ln3364_3_fu_607_p1) - signed(zext_ln3364_7_fu_617_p1));
    c_14_fu_638_p3 <= 
        c_13_fu_625_p2 when (xor_ln3376_4_fu_620_p2(0) = '1') else 
        sext_ln3364_3_fu_607_p1;
    c_15_fu_654_p3 <= (c_14_fu_638_p3 & trunc_ln3371_4_reg_1448);
    c_16_fu_701_p2 <= std_logic_vector(signed(sext_ln3364_4_fu_661_p1) - signed(zext_ln3364_9_fu_681_p1));
    c_17_fu_715_p3 <= 
        c_16_fu_701_p2 when (xor_ln3376_5_fu_695_p2(0) = '1') else 
        sext_ln3364_4_fu_661_p1;
    c_18_fu_731_p3 <= (c_17_reg_1534 & trunc_ln3371_5_reg_1453);
    c_19_fu_775_p2 <= std_logic_vector(signed(sext_ln3364_5_fu_737_p1) - signed(zext_ln3364_11_fu_755_p1));
    c_1_fu_200_p2 <= std_logic_vector(unsigned(zext_ln3364_fu_160_p1) - unsigned(b_fu_180_p3));
    c_20_fu_788_p3 <= 
        c_19_fu_775_p2 when (xor_ln3376_6_fu_769_p2(0) = '1') else 
        sext_ln3364_5_fu_737_p1;
    c_21_fu_804_p3 <= (c_20_fu_788_p3 & trunc_ln3371_6_reg_1458);
    c_22_fu_847_p2 <= std_logic_vector(signed(sext_ln3364_6_fu_829_p1) - signed(zext_ln3364_13_fu_839_p1));
    c_23_fu_860_p3 <= 
        c_22_fu_847_p2 when (xor_ln3376_7_fu_842_p2(0) = '1') else 
        sext_ln3364_6_fu_829_p1;
    c_24_fu_876_p3 <= (c_23_fu_860_p3 & trunc_ln3371_7_reg_1463);
    c_25_fu_923_p2 <= std_logic_vector(signed(sext_ln3364_7_fu_883_p1) - signed(zext_ln3364_15_fu_903_p1));
    c_26_fu_937_p3 <= 
        c_25_fu_923_p2 when (xor_ln3376_8_fu_917_p2(0) = '1') else 
        sext_ln3364_7_fu_883_p1;
    c_27_fu_953_p3 <= (c_26_reg_1567 & trunc_ln3371_8_reg_1468);
    c_28_fu_997_p2 <= std_logic_vector(signed(sext_ln3364_8_fu_959_p1) - signed(zext_ln3364_17_fu_977_p1));
    c_29_fu_1010_p3 <= 
        c_28_fu_997_p2 when (xor_ln3376_9_fu_991_p2(0) = '1') else 
        sext_ln3364_8_fu_959_p1;
    c_2_fu_214_p3 <= 
        c_1_fu_200_p2 when (xor_ln3376_fu_194_p2(0) = '1') else 
        zext_ln3364_fu_160_p1;
    c_30_fu_1030_p3 <= (c_29_fu_1010_p3 & trunc_ln3371_9_reg_1473);
    c_31_fu_1066_p2 <= std_logic_vector(unsigned(or_ln_fu_1037_p3) - unsigned(zext_ln3364_20_fu_1056_p1));
    c_32_fu_1091_p3 <= 
        c_31_reg_1595 when (xor_ln3376_10_fu_1079_p2(0) = '1') else 
        or_ln_reg_1585;
    c_33_fu_1109_p3 <= (c_32_fu_1091_p3 & trunc_ln3371_s_reg_1479);
    c_34_fu_1159_p2 <= std_logic_vector(unsigned(or_ln3364_1_fu_1116_p3) - unsigned(zext_ln3364_22_fu_1143_p1));
    c_35_fu_1173_p3 <= 
        c_34_fu_1159_p2 when (xor_ln3376_11_fu_1153_p2(0) = '1') else 
        or_ln3364_1_fu_1116_p3;
    c_36_fu_1193_p3 <= (c_35_reg_1600 & trunc_ln3371_10_reg_1485);
    c_37_fu_1239_p2 <= std_logic_vector(unsigned(or_ln3364_2_fu_1199_p3) - unsigned(zext_ln3364_24_fu_1223_p1));
    c_38_fu_1252_p3 <= 
        c_37_fu_1239_p2 when (xor_ln3376_12_fu_1233_p2(0) = '1') else 
        or_ln3364_2_fu_1199_p3;
    c_39_fu_1272_p3 <= (c_38_fu_1252_p3 & trunc_ln3371_11_reg_1491);
    c_3_fu_240_p3 <= (c_2_fu_214_p3 & trunc_ln4_fu_230_p4);
    c_40_fu_1321_p2 <= std_logic_vector(unsigned(or_ln3364_3_fu_1300_p3) - unsigned(zext_ln3364_26_fu_1313_p1));
    c_41_fu_1334_p3 <= 
        c_40_fu_1321_p2 when (xor_ln3376_13_fu_1316_p2(0) = '1') else 
        or_ln3364_3_fu_1300_p3;
    c_42_fu_1350_p3 <= (c_41_fu_1334_p3 & trunc_ln3360_fu_1297_p1);
    c_4_fu_405_p2 <= std_logic_vector(signed(sext_ln3364_fu_392_p1) - signed(zext_ln3364_1_fu_402_p1));
    c_5_fu_418_p3 <= 
        c_4_fu_405_p2 when (xor_ln3376_1_reg_1427(0) = '1') else 
        sext_ln3364_fu_392_p1;
    c_6_fu_432_p3 <= (c_5_fu_418_p3 & trunc_ln3371_1_reg_1433);
    c_7_fu_471_p2 <= std_logic_vector(signed(sext_ln3364_1_fu_439_p1) - signed(zext_ln3364_3_fu_451_p1));
    c_8_fu_477_p3 <= 
        c_7_fu_471_p2 when (xor_ln3376_2_fu_465_p2(0) = '1') else 
        sext_ln3364_1_fu_439_p1;
    c_9_fu_506_p3 <= (c_8_reg_1508 & trunc_ln3371_2_reg_1438);
    c_fu_150_p4 <= value_r(29 downto 28);
    icmp_ln3376_10_fu_1060_p2 <= "1" when (unsigned(c_30_fu_1030_p3) < unsigned(zext_ln3364_19_fu_1052_p1)) else "0";
    icmp_ln3376_11_fu_1147_p2 <= "1" when (unsigned(c_33_fu_1109_p3) < unsigned(zext_ln3364_21_fu_1139_p1)) else "0";
    icmp_ln3376_12_fu_1227_p2 <= "1" when (unsigned(c_36_fu_1193_p3) < unsigned(zext_ln3364_23_fu_1219_p1)) else "0";
    icmp_ln3376_13_fu_1291_p2 <= "1" when (unsigned(c_39_fu_1272_p3) < unsigned(zext_ln3364_25_fu_1287_p1)) else "0";
    icmp_ln3376_14_fu_1378_p2 <= "1" when (unsigned(c_42_fu_1350_p3) < unsigned(zext_ln3364_27_fu_1374_p1)) else "0";
    icmp_ln3376_1_fu_260_p2 <= "1" when (unsigned(c_3_fu_240_p3) < unsigned(zext_ln3364_2_fu_256_p1)) else "0";
    icmp_ln3376_2_fu_459_p2 <= "1" when (unsigned(c_6_fu_432_p3) < unsigned(zext_ln3364_4_fu_455_p1)) else "0";
    icmp_ln3376_3_fu_540_p2 <= "1" when (unsigned(c_9_fu_506_p3) < unsigned(zext_ln3364_6_fu_536_p1)) else "0";
    icmp_ln3376_4_fu_601_p2 <= "1" when (unsigned(c_12_fu_582_p3) < unsigned(zext_ln3364_8_fu_597_p1)) else "0";
    icmp_ln3376_5_fu_689_p2 <= "1" when (unsigned(c_15_fu_654_p3) < unsigned(zext_ln3364_10_fu_685_p1)) else "0";
    icmp_ln3376_6_fu_763_p2 <= "1" when (unsigned(c_18_fu_731_p3) < unsigned(zext_ln3364_12_fu_759_p1)) else "0";
    icmp_ln3376_7_fu_823_p2 <= "1" when (unsigned(c_21_fu_804_p3) < unsigned(zext_ln3364_14_fu_819_p1)) else "0";
    icmp_ln3376_8_fu_911_p2 <= "1" when (unsigned(c_24_fu_876_p3) < unsigned(zext_ln3364_16_fu_907_p1)) else "0";
    icmp_ln3376_9_fu_985_p2 <= "1" when (unsigned(c_27_fu_953_p3) < unsigned(zext_ln3364_18_fu_981_p1)) else "0";
    icmp_ln3376_fu_188_p2 <= "1" when (unsigned(zext_ln3364_fu_160_p1) < unsigned(b_fu_180_p3)) else "0";
    or_ln1_fu_1390_p3 <= (a_829_fu_1342_p3 & ap_const_lv1_1);
    or_ln3364_1_fu_1116_p3 <= (trunc_ln3371_12_fu_1105_p1 & trunc_ln3371_s_reg_1479);
    or_ln3364_2_fu_1199_p3 <= (trunc_ln3371_13_reg_1612 & trunc_ln3371_10_reg_1485);
    or_ln3364_3_fu_1300_p3 <= (trunc_ln3371_14_reg_1623 & trunc_ln3371_11_reg_1491);
    or_ln_fu_1037_p3 <= (trunc_ln3371_fu_1026_p1 & trunc_ln3371_9_reg_1473);
        sext_ln3364_1_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_6_fu_432_p3),9));

        sext_ln3364_2_fu_512_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_9_fu_506_p3),12));

        sext_ln3364_3_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_12_reg_1519),15));

        sext_ln3364_4_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_15_fu_654_p3),18));

        sext_ln3364_5_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_18_fu_731_p3),21));

        sext_ln3364_6_fu_829_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_21_reg_1552),24));

        sext_ln3364_7_fu_883_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_24_fu_876_p3),27));

        sext_ln3364_8_fu_959_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_27_fu_953_p3),30));

        sext_ln3364_fu_392_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(c_3_reg_1417),6));

    tmp_fu_164_p3 <= value_r(30 downto 30);
    trunc_ln3360_fu_1297_p1 <= value_r(2 - 1 downto 0);
    trunc_ln3371_12_fu_1105_p1 <= c_32_fu_1091_p3(28 - 1 downto 0);
    trunc_ln3371_13_fu_1189_p1 <= c_35_fu_1173_p3(28 - 1 downto 0);
    trunc_ln3371_14_fu_1268_p1 <= c_38_fu_1252_p3(28 - 1 downto 0);
    trunc_ln3371_fu_1026_p1 <= c_29_fu_1010_p3(28 - 1 downto 0);
    trunc_ln4_fu_230_p4 <= value_r(27 downto 26);
    xor_ln3376_10_fu_1079_p2 <= (icmp_ln3376_10_reg_1590 xor ap_const_lv1_1);
    xor_ln3376_11_fu_1153_p2 <= (icmp_ln3376_11_fu_1147_p2 xor ap_const_lv1_1);
    xor_ln3376_12_fu_1233_p2 <= (icmp_ln3376_12_fu_1227_p2 xor ap_const_lv1_1);
    xor_ln3376_13_fu_1316_p2 <= (icmp_ln3376_13_reg_1633 xor ap_const_lv1_1);
    xor_ln3376_14_fu_1384_p2 <= (icmp_ln3376_14_fu_1378_p2 xor ap_const_lv1_1);
    xor_ln3376_1_fu_266_p2 <= (icmp_ln3376_1_fu_260_p2 xor ap_const_lv1_1);
    xor_ln3376_2_fu_465_p2 <= (icmp_ln3376_2_fu_459_p2 xor ap_const_lv1_1);
    xor_ln3376_3_fu_546_p2 <= (icmp_ln3376_3_fu_540_p2 xor ap_const_lv1_1);
    xor_ln3376_4_fu_620_p2 <= (icmp_ln3376_4_reg_1529 xor ap_const_lv1_1);
    xor_ln3376_5_fu_695_p2 <= (icmp_ln3376_5_fu_689_p2 xor ap_const_lv1_1);
    xor_ln3376_6_fu_769_p2 <= (icmp_ln3376_6_fu_763_p2 xor ap_const_lv1_1);
    xor_ln3376_7_fu_842_p2 <= (icmp_ln3376_7_reg_1562 xor ap_const_lv1_1);
    xor_ln3376_8_fu_917_p2 <= (icmp_ln3376_8_fu_911_p2 xor ap_const_lv1_1);
    xor_ln3376_9_fu_991_p2 <= (icmp_ln3376_9_fu_985_p2 xor ap_const_lv1_1);
    xor_ln3376_fu_194_p2 <= (icmp_ln3376_fu_188_p2 xor ap_const_lv1_1);
    zext_ln3364_10_fu_685_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_5_fu_673_p3),17));
    zext_ln3364_11_fu_755_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_6_fu_748_p3),21));
    zext_ln3364_12_fu_759_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_6_fu_748_p3),20));
    zext_ln3364_13_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_7_reg_1557),24));
    zext_ln3364_14_fu_819_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_7_fu_811_p3),23));
    zext_ln3364_15_fu_903_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_8_fu_895_p3),27));
    zext_ln3364_16_fu_907_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_8_fu_895_p3),26));
    zext_ln3364_17_fu_977_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_9_fu_970_p3),30));
    zext_ln3364_18_fu_981_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_9_fu_970_p3),29));
    zext_ln3364_19_fu_1052_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_10_fu_1044_p3),32));
    zext_ln3364_1_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_1_reg_1422),6));
    zext_ln3364_20_fu_1056_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_10_fu_1044_p3),30));
    zext_ln3364_21_fu_1139_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_11_fu_1131_p3),32));
    zext_ln3364_22_fu_1143_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_11_fu_1131_p3),30));
    zext_ln3364_23_fu_1219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_12_fu_1212_p3),32));
    zext_ln3364_24_fu_1223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_12_fu_1212_p3),30));
    zext_ln3364_25_fu_1287_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_13_fu_1279_p3),32));
    zext_ln3364_26_fu_1313_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_13_reg_1628),30));
    zext_ln3364_27_fu_1374_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_14_fu_1366_p3),32));
    zext_ln3364_2_fu_256_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_1_fu_248_p3),5));
    zext_ln3364_3_fu_451_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_2_fu_443_p3),9));
    zext_ln3364_4_fu_455_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_2_fu_443_p3),8));
    zext_ln3364_5_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_3_fu_524_p3),12));
    zext_ln3364_6_fu_536_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_3_fu_524_p3),11));
    zext_ln3364_7_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_4_reg_1524),15));
    zext_ln3364_8_fu_597_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_4_fu_589_p3),14));
    zext_ln3364_9_fu_681_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(b_5_fu_673_p3),18));
    zext_ln3364_fu_160_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(c_fu_150_p4),3));
end behav;
