// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module detectFaces_int_sqrt (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        value_r,
        ap_return
);

parameter    ap_ST_fsm_state1 = 10'd1;
parameter    ap_ST_fsm_state2 = 10'd2;
parameter    ap_ST_fsm_state3 = 10'd4;
parameter    ap_ST_fsm_state4 = 10'd8;
parameter    ap_ST_fsm_state5 = 10'd16;
parameter    ap_ST_fsm_state6 = 10'd32;
parameter    ap_ST_fsm_state7 = 10'd64;
parameter    ap_ST_fsm_state8 = 10'd128;
parameter    ap_ST_fsm_state9 = 10'd256;
parameter    ap_ST_fsm_state10 = 10'd512;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [30:0] value_r;
output  [15:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [9:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [1:0] a_790_fu_222_p3;
reg   [1:0] a_790_reg_1411;
wire  signed [4:0] c_3_fu_240_p3;
reg  signed [4:0] c_3_reg_1417;
wire   [3:0] b_1_fu_248_p3;
reg   [3:0] b_1_reg_1422;
wire   [0:0] xor_ln3376_1_fu_266_p2;
reg   [0:0] xor_ln3376_1_reg_1427;
reg   [1:0] trunc_ln3371_1_reg_1433;
reg   [1:0] trunc_ln3371_2_reg_1438;
reg   [1:0] trunc_ln3371_3_reg_1443;
reg   [1:0] trunc_ln3371_4_reg_1448;
reg   [1:0] trunc_ln3371_5_reg_1453;
reg   [1:0] trunc_ln3371_6_reg_1458;
reg   [1:0] trunc_ln3371_7_reg_1463;
reg   [1:0] trunc_ln3371_8_reg_1468;
reg   [1:0] trunc_ln3371_9_reg_1473;
reg   [1:0] trunc_ln3371_s_reg_1479;
reg   [1:0] trunc_ln3371_10_reg_1485;
reg   [1:0] trunc_ln3371_11_reg_1491;
wire   [2:0] a_793_fu_425_p3;
reg   [2:0] a_793_reg_1497;
wire    ap_CS_fsm_state2;
wire   [0:0] xor_ln3376_2_fu_465_p2;
reg   [0:0] xor_ln3376_2_reg_1503;
wire   [8:0] c_8_fu_477_p3;
reg   [8:0] c_8_reg_1508;
wire   [4:0] a_799_fu_574_p3;
reg   [4:0] a_799_reg_1513;
wire    ap_CS_fsm_state3;
wire  signed [13:0] c_12_fu_582_p3;
reg  signed [13:0] c_12_reg_1519;
wire   [6:0] b_4_fu_589_p3;
reg   [6:0] b_4_reg_1524;
wire   [0:0] icmp_ln3376_4_fu_601_p2;
reg   [0:0] icmp_ln3376_4_reg_1529;
wire   [17:0] c_17_fu_715_p3;
reg   [17:0] c_17_reg_1534;
wire    ap_CS_fsm_state4;
wire   [6:0] a_805_fu_723_p3;
reg   [6:0] a_805_reg_1539;
wire   [7:0] a_808_fu_796_p3;
reg   [7:0] a_808_reg_1546;
wire    ap_CS_fsm_state5;
wire  signed [22:0] c_21_fu_804_p3;
reg  signed [22:0] c_21_reg_1552;
wire   [9:0] b_7_fu_811_p3;
reg   [9:0] b_7_reg_1557;
wire   [0:0] icmp_ln3376_7_fu_823_p2;
reg   [0:0] icmp_ln3376_7_reg_1562;
wire   [26:0] c_26_fu_937_p3;
reg   [26:0] c_26_reg_1567;
wire    ap_CS_fsm_state6;
wire   [9:0] a_814_fu_945_p3;
reg   [9:0] a_814_reg_1572;
wire   [10:0] a_817_fu_1018_p3;
reg   [10:0] a_817_reg_1579;
wire    ap_CS_fsm_state7;
wire   [29:0] or_ln_fu_1037_p3;
reg   [29:0] or_ln_reg_1585;
wire   [0:0] icmp_ln3376_10_fu_1060_p2;
reg   [0:0] icmp_ln3376_10_reg_1590;
wire   [29:0] c_31_fu_1066_p2;
reg   [29:0] c_31_reg_1595;
wire   [29:0] c_35_fu_1173_p3;
reg   [29:0] c_35_reg_1600;
wire    ap_CS_fsm_state8;
wire   [12:0] a_823_fu_1181_p3;
reg   [12:0] a_823_reg_1605;
wire   [27:0] trunc_ln3371_13_fu_1189_p1;
reg   [27:0] trunc_ln3371_13_reg_1612;
wire   [13:0] a_826_fu_1260_p3;
reg   [13:0] a_826_reg_1617;
wire    ap_CS_fsm_state9;
wire   [27:0] trunc_ln3371_14_fu_1268_p1;
reg   [27:0] trunc_ln3371_14_reg_1623;
wire   [15:0] b_13_fu_1279_p3;
reg   [15:0] b_13_reg_1628;
wire   [0:0] icmp_ln3376_13_fu_1291_p2;
reg   [0:0] icmp_ln3376_13_reg_1633;
wire   [1:0] c_fu_150_p4;
wire   [0:0] tmp_fu_164_p3;
wire   [2:0] zext_ln3364_fu_160_p1;
wire   [2:0] b_fu_180_p3;
wire   [0:0] icmp_ln3376_fu_188_p2;
wire   [0:0] xor_ln3376_fu_194_p2;
wire   [2:0] c_1_fu_200_p2;
wire   [1:0] a_789_fu_206_p3;
wire   [1:0] a_fu_172_p3;
wire   [2:0] c_2_fu_214_p3;
wire   [1:0] trunc_ln4_fu_230_p4;
wire   [4:0] zext_ln3364_2_fu_256_p1;
wire   [0:0] icmp_ln3376_1_fu_260_p2;
wire  signed [5:0] sext_ln3364_fu_392_p1;
wire   [5:0] zext_ln3364_1_fu_402_p1;
wire   [5:0] c_4_fu_405_p2;
wire   [2:0] a_792_fu_411_p3;
wire   [2:0] a_791_fu_395_p3;
wire   [5:0] c_5_fu_418_p3;
wire  signed [7:0] c_6_fu_432_p3;
wire   [4:0] b_2_fu_443_p3;
wire   [7:0] zext_ln3364_4_fu_455_p1;
wire   [0:0] icmp_ln3376_2_fu_459_p2;
wire  signed [8:0] sext_ln3364_1_fu_439_p1;
wire   [8:0] zext_ln3364_3_fu_451_p1;
wire   [8:0] c_7_fu_471_p2;
wire   [3:0] a_795_fu_492_p3;
wire   [3:0] a_794_fu_485_p3;
wire  signed [10:0] c_9_fu_506_p3;
wire   [3:0] a_796_fu_499_p3;
wire   [5:0] b_3_fu_524_p3;
wire   [10:0] zext_ln3364_6_fu_536_p1;
wire   [0:0] icmp_ln3376_3_fu_540_p2;
wire  signed [11:0] sext_ln3364_2_fu_512_p1;
wire   [11:0] zext_ln3364_5_fu_532_p1;
wire   [0:0] xor_ln3376_3_fu_546_p2;
wire   [11:0] c_10_fu_552_p2;
wire   [4:0] a_798_fu_558_p3;
wire   [4:0] a_797_fu_516_p3;
wire   [11:0] c_11_fu_566_p3;
wire   [13:0] zext_ln3364_8_fu_597_p1;
wire  signed [14:0] sext_ln3364_3_fu_607_p1;
wire   [14:0] zext_ln3364_7_fu_617_p1;
wire   [0:0] xor_ln3376_4_fu_620_p2;
wire   [14:0] c_13_fu_625_p2;
wire   [5:0] a_801_fu_631_p3;
wire   [5:0] a_800_fu_610_p3;
wire   [14:0] c_14_fu_638_p3;
wire  signed [16:0] c_15_fu_654_p3;
wire   [5:0] a_802_fu_646_p3;
wire   [7:0] b_5_fu_673_p3;
wire   [16:0] zext_ln3364_10_fu_685_p1;
wire   [0:0] icmp_ln3376_5_fu_689_p2;
wire  signed [17:0] sext_ln3364_4_fu_661_p1;
wire   [17:0] zext_ln3364_9_fu_681_p1;
wire   [0:0] xor_ln3376_5_fu_695_p2;
wire   [17:0] c_16_fu_701_p2;
wire   [6:0] a_804_fu_707_p3;
wire   [6:0] a_803_fu_665_p3;
wire  signed [19:0] c_18_fu_731_p3;
wire   [8:0] b_6_fu_748_p3;
wire   [19:0] zext_ln3364_12_fu_759_p1;
wire   [0:0] icmp_ln3376_6_fu_763_p2;
wire  signed [20:0] sext_ln3364_5_fu_737_p1;
wire   [20:0] zext_ln3364_11_fu_755_p1;
wire   [0:0] xor_ln3376_6_fu_769_p2;
wire   [20:0] c_19_fu_775_p2;
wire   [7:0] a_807_fu_781_p3;
wire   [7:0] a_806_fu_741_p3;
wire   [20:0] c_20_fu_788_p3;
wire   [22:0] zext_ln3364_14_fu_819_p1;
wire  signed [23:0] sext_ln3364_6_fu_829_p1;
wire   [23:0] zext_ln3364_13_fu_839_p1;
wire   [0:0] xor_ln3376_7_fu_842_p2;
wire   [23:0] c_22_fu_847_p2;
wire   [8:0] a_810_fu_853_p3;
wire   [8:0] a_809_fu_832_p3;
wire   [23:0] c_23_fu_860_p3;
wire  signed [25:0] c_24_fu_876_p3;
wire   [8:0] a_811_fu_868_p3;
wire   [10:0] b_8_fu_895_p3;
wire   [25:0] zext_ln3364_16_fu_907_p1;
wire   [0:0] icmp_ln3376_8_fu_911_p2;
wire  signed [26:0] sext_ln3364_7_fu_883_p1;
wire   [26:0] zext_ln3364_15_fu_903_p1;
wire   [0:0] xor_ln3376_8_fu_917_p2;
wire   [26:0] c_25_fu_923_p2;
wire   [9:0] a_813_fu_929_p3;
wire   [9:0] a_812_fu_887_p3;
wire  signed [28:0] c_27_fu_953_p3;
wire   [11:0] b_9_fu_970_p3;
wire   [28:0] zext_ln3364_18_fu_981_p1;
wire   [0:0] icmp_ln3376_9_fu_985_p2;
wire  signed [29:0] sext_ln3364_8_fu_959_p1;
wire   [29:0] zext_ln3364_17_fu_977_p1;
wire   [0:0] xor_ln3376_9_fu_991_p2;
wire   [29:0] c_28_fu_997_p2;
wire   [10:0] a_816_fu_1003_p3;
wire   [10:0] a_815_fu_963_p3;
wire   [29:0] c_29_fu_1010_p3;
wire   [27:0] trunc_ln3371_fu_1026_p1;
wire   [12:0] b_10_fu_1044_p3;
wire   [31:0] c_30_fu_1030_p3;
wire   [31:0] zext_ln3364_19_fu_1052_p1;
wire   [29:0] zext_ln3364_20_fu_1056_p1;
wire   [0:0] xor_ln3376_10_fu_1079_p2;
wire   [11:0] a_819_fu_1084_p3;
wire   [11:0] a_818_fu_1072_p3;
wire   [29:0] c_32_fu_1091_p3;
wire   [27:0] trunc_ln3371_12_fu_1105_p1;
wire   [11:0] a_820_fu_1097_p3;
wire   [13:0] b_11_fu_1131_p3;
wire   [31:0] c_33_fu_1109_p3;
wire   [31:0] zext_ln3364_21_fu_1139_p1;
wire   [0:0] icmp_ln3376_11_fu_1147_p2;
wire   [29:0] or_ln3364_1_fu_1116_p3;
wire   [29:0] zext_ln3364_22_fu_1143_p1;
wire   [0:0] xor_ln3376_11_fu_1153_p2;
wire   [29:0] c_34_fu_1159_p2;
wire   [12:0] a_822_fu_1165_p3;
wire   [12:0] a_821_fu_1123_p3;
wire   [14:0] b_12_fu_1212_p3;
wire   [31:0] c_36_fu_1193_p3;
wire   [31:0] zext_ln3364_23_fu_1219_p1;
wire   [0:0] icmp_ln3376_12_fu_1227_p2;
wire   [29:0] or_ln3364_2_fu_1199_p3;
wire   [29:0] zext_ln3364_24_fu_1223_p1;
wire   [0:0] xor_ln3376_12_fu_1233_p2;
wire   [29:0] c_37_fu_1239_p2;
wire   [13:0] a_825_fu_1245_p3;
wire   [13:0] a_824_fu_1205_p3;
wire   [29:0] c_38_fu_1252_p3;
wire   [31:0] c_39_fu_1272_p3;
wire   [31:0] zext_ln3364_25_fu_1287_p1;
wire    ap_CS_fsm_state10;
wire   [29:0] or_ln3364_3_fu_1300_p3;
wire   [29:0] zext_ln3364_26_fu_1313_p1;
wire   [0:0] xor_ln3376_13_fu_1316_p2;
wire   [29:0] c_40_fu_1321_p2;
wire   [14:0] a_828_fu_1327_p3;
wire   [14:0] a_827_fu_1306_p3;
wire   [29:0] c_41_fu_1334_p3;
wire   [1:0] trunc_ln3360_fu_1297_p1;
wire   [14:0] a_829_fu_1342_p3;
wire   [16:0] b_14_fu_1366_p3;
wire   [31:0] c_42_fu_1350_p3;
wire   [31:0] zext_ln3364_27_fu_1374_p1;
wire   [0:0] icmp_ln3376_14_fu_1378_p2;
wire   [0:0] xor_ln3376_14_fu_1384_p2;
wire   [15:0] or_ln1_fu_1390_p3;
wire   [15:0] a_830_fu_1358_p3;
reg   [9:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
wire    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 10'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        a_790_reg_1411 <= a_790_fu_222_p3;
        b_1_reg_1422[3 : 2] <= b_1_fu_248_p3[3 : 2];
        c_3_reg_1417 <= c_3_fu_240_p3;
        trunc_ln3371_10_reg_1485 <= {{value_r[5:4]}};
        trunc_ln3371_11_reg_1491 <= {{value_r[3:2]}};
        trunc_ln3371_1_reg_1433 <= {{value_r[25:24]}};
        trunc_ln3371_2_reg_1438 <= {{value_r[23:22]}};
        trunc_ln3371_3_reg_1443 <= {{value_r[21:20]}};
        trunc_ln3371_4_reg_1448 <= {{value_r[19:18]}};
        trunc_ln3371_5_reg_1453 <= {{value_r[17:16]}};
        trunc_ln3371_6_reg_1458 <= {{value_r[15:14]}};
        trunc_ln3371_7_reg_1463 <= {{value_r[13:12]}};
        trunc_ln3371_8_reg_1468 <= {{value_r[11:10]}};
        trunc_ln3371_9_reg_1473 <= {{value_r[9:8]}};
        trunc_ln3371_s_reg_1479 <= {{value_r[7:6]}};
        xor_ln3376_1_reg_1427 <= xor_ln3376_1_fu_266_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        a_793_reg_1497 <= a_793_fu_425_p3;
        c_8_reg_1508 <= c_8_fu_477_p3;
        xor_ln3376_2_reg_1503 <= xor_ln3376_2_fu_465_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        a_799_reg_1513 <= a_799_fu_574_p3;
        b_4_reg_1524[6 : 2] <= b_4_fu_589_p3[6 : 2];
        c_12_reg_1519 <= c_12_fu_582_p3;
        icmp_ln3376_4_reg_1529 <= icmp_ln3376_4_fu_601_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        a_805_reg_1539 <= a_805_fu_723_p3;
        c_17_reg_1534 <= c_17_fu_715_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        a_808_reg_1546 <= a_808_fu_796_p3;
        b_7_reg_1557[9 : 2] <= b_7_fu_811_p3[9 : 2];
        c_21_reg_1552 <= c_21_fu_804_p3;
        icmp_ln3376_7_reg_1562 <= icmp_ln3376_7_fu_823_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        a_814_reg_1572 <= a_814_fu_945_p3;
        c_26_reg_1567 <= c_26_fu_937_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        a_817_reg_1579 <= a_817_fu_1018_p3;
        c_31_reg_1595 <= c_31_fu_1066_p2;
        icmp_ln3376_10_reg_1590 <= icmp_ln3376_10_fu_1060_p2;
        or_ln_reg_1585 <= or_ln_fu_1037_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        a_823_reg_1605 <= a_823_fu_1181_p3;
        c_35_reg_1600 <= c_35_fu_1173_p3;
        trunc_ln3371_13_reg_1612 <= trunc_ln3371_13_fu_1189_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        a_826_reg_1617 <= a_826_fu_1260_p3;
        b_13_reg_1628[15 : 2] <= b_13_fu_1279_p3[15 : 2];
        icmp_ln3376_13_reg_1633 <= icmp_ln3376_13_fu_1291_p2;
        trunc_ln3371_14_reg_1623 <= trunc_ln3371_14_fu_1268_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

always @ (*) begin
    if ((ap_start == 1'b0)) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state2_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state10) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_789_fu_206_p3 = {{tmp_fu_164_p3}, {1'd1}};

assign a_790_fu_222_p3 = ((xor_ln3376_fu_194_p2[0:0] == 1'b1) ? a_789_fu_206_p3 : a_fu_172_p3);

assign a_791_fu_395_p3 = {{a_790_reg_1411}, {1'd0}};

assign a_792_fu_411_p3 = {{a_790_reg_1411}, {1'd1}};

assign a_793_fu_425_p3 = ((xor_ln3376_1_reg_1427[0:0] == 1'b1) ? a_792_fu_411_p3 : a_791_fu_395_p3);

assign a_794_fu_485_p3 = {{a_793_reg_1497}, {1'd0}};

assign a_795_fu_492_p3 = {{a_793_reg_1497}, {1'd1}};

assign a_796_fu_499_p3 = ((xor_ln3376_2_reg_1503[0:0] == 1'b1) ? a_795_fu_492_p3 : a_794_fu_485_p3);

assign a_797_fu_516_p3 = {{a_796_fu_499_p3}, {1'd0}};

assign a_798_fu_558_p3 = {{a_796_fu_499_p3}, {1'd1}};

assign a_799_fu_574_p3 = ((xor_ln3376_3_fu_546_p2[0:0] == 1'b1) ? a_798_fu_558_p3 : a_797_fu_516_p3);

assign a_800_fu_610_p3 = {{a_799_reg_1513}, {1'd0}};

assign a_801_fu_631_p3 = {{a_799_reg_1513}, {1'd1}};

assign a_802_fu_646_p3 = ((xor_ln3376_4_fu_620_p2[0:0] == 1'b1) ? a_801_fu_631_p3 : a_800_fu_610_p3);

assign a_803_fu_665_p3 = {{a_802_fu_646_p3}, {1'd0}};

assign a_804_fu_707_p3 = {{a_802_fu_646_p3}, {1'd1}};

assign a_805_fu_723_p3 = ((xor_ln3376_5_fu_695_p2[0:0] == 1'b1) ? a_804_fu_707_p3 : a_803_fu_665_p3);

assign a_806_fu_741_p3 = {{a_805_reg_1539}, {1'd0}};

assign a_807_fu_781_p3 = {{a_805_reg_1539}, {1'd1}};

assign a_808_fu_796_p3 = ((xor_ln3376_6_fu_769_p2[0:0] == 1'b1) ? a_807_fu_781_p3 : a_806_fu_741_p3);

assign a_809_fu_832_p3 = {{a_808_reg_1546}, {1'd0}};

assign a_810_fu_853_p3 = {{a_808_reg_1546}, {1'd1}};

assign a_811_fu_868_p3 = ((xor_ln3376_7_fu_842_p2[0:0] == 1'b1) ? a_810_fu_853_p3 : a_809_fu_832_p3);

assign a_812_fu_887_p3 = {{a_811_fu_868_p3}, {1'd0}};

assign a_813_fu_929_p3 = {{a_811_fu_868_p3}, {1'd1}};

assign a_814_fu_945_p3 = ((xor_ln3376_8_fu_917_p2[0:0] == 1'b1) ? a_813_fu_929_p3 : a_812_fu_887_p3);

assign a_815_fu_963_p3 = {{a_814_reg_1572}, {1'd0}};

assign a_816_fu_1003_p3 = {{a_814_reg_1572}, {1'd1}};

assign a_817_fu_1018_p3 = ((xor_ln3376_9_fu_991_p2[0:0] == 1'b1) ? a_816_fu_1003_p3 : a_815_fu_963_p3);

assign a_818_fu_1072_p3 = {{a_817_reg_1579}, {1'd0}};

assign a_819_fu_1084_p3 = {{a_817_reg_1579}, {1'd1}};

assign a_820_fu_1097_p3 = ((xor_ln3376_10_fu_1079_p2[0:0] == 1'b1) ? a_819_fu_1084_p3 : a_818_fu_1072_p3);

assign a_821_fu_1123_p3 = {{a_820_fu_1097_p3}, {1'd0}};

assign a_822_fu_1165_p3 = {{a_820_fu_1097_p3}, {1'd1}};

assign a_823_fu_1181_p3 = ((xor_ln3376_11_fu_1153_p2[0:0] == 1'b1) ? a_822_fu_1165_p3 : a_821_fu_1123_p3);

assign a_824_fu_1205_p3 = {{a_823_reg_1605}, {1'd0}};

assign a_825_fu_1245_p3 = {{a_823_reg_1605}, {1'd1}};

assign a_826_fu_1260_p3 = ((xor_ln3376_12_fu_1233_p2[0:0] == 1'b1) ? a_825_fu_1245_p3 : a_824_fu_1205_p3);

assign a_827_fu_1306_p3 = {{a_826_reg_1617}, {1'd0}};

assign a_828_fu_1327_p3 = {{a_826_reg_1617}, {1'd1}};

assign a_829_fu_1342_p3 = ((xor_ln3376_13_fu_1316_p2[0:0] == 1'b1) ? a_828_fu_1327_p3 : a_827_fu_1306_p3);

assign a_830_fu_1358_p3 = {{a_829_fu_1342_p3}, {1'd0}};

assign a_fu_172_p3 = {{tmp_fu_164_p3}, {1'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_return = ((xor_ln3376_14_fu_1384_p2[0:0] == 1'b1) ? or_ln1_fu_1390_p3 : a_830_fu_1358_p3);

assign b_10_fu_1044_p3 = {{a_817_fu_1018_p3}, {2'd1}};

assign b_11_fu_1131_p3 = {{a_820_fu_1097_p3}, {2'd1}};

assign b_12_fu_1212_p3 = {{a_823_reg_1605}, {2'd1}};

assign b_13_fu_1279_p3 = {{a_826_fu_1260_p3}, {2'd1}};

assign b_14_fu_1366_p3 = {{a_829_fu_1342_p3}, {2'd1}};

assign b_1_fu_248_p3 = {{a_790_fu_222_p3}, {2'd1}};

assign b_2_fu_443_p3 = {{a_793_fu_425_p3}, {2'd1}};

assign b_3_fu_524_p3 = {{a_796_fu_499_p3}, {2'd1}};

assign b_4_fu_589_p3 = {{a_799_fu_574_p3}, {2'd1}};

assign b_5_fu_673_p3 = {{a_802_fu_646_p3}, {2'd1}};

assign b_6_fu_748_p3 = {{a_805_reg_1539}, {2'd1}};

assign b_7_fu_811_p3 = {{a_808_fu_796_p3}, {2'd1}};

assign b_8_fu_895_p3 = {{a_811_fu_868_p3}, {2'd1}};

assign b_9_fu_970_p3 = {{a_814_reg_1572}, {2'd1}};

assign b_fu_180_p3 = {{tmp_fu_164_p3}, {2'd1}};

assign c_10_fu_552_p2 = ($signed(sext_ln3364_2_fu_512_p1) - $signed(zext_ln3364_5_fu_532_p1));

assign c_11_fu_566_p3 = ((xor_ln3376_3_fu_546_p2[0:0] == 1'b1) ? c_10_fu_552_p2 : sext_ln3364_2_fu_512_p1);

assign c_12_fu_582_p3 = {{c_11_fu_566_p3}, {trunc_ln3371_3_reg_1443}};

assign c_13_fu_625_p2 = ($signed(sext_ln3364_3_fu_607_p1) - $signed(zext_ln3364_7_fu_617_p1));

assign c_14_fu_638_p3 = ((xor_ln3376_4_fu_620_p2[0:0] == 1'b1) ? c_13_fu_625_p2 : sext_ln3364_3_fu_607_p1);

assign c_15_fu_654_p3 = {{c_14_fu_638_p3}, {trunc_ln3371_4_reg_1448}};

assign c_16_fu_701_p2 = ($signed(sext_ln3364_4_fu_661_p1) - $signed(zext_ln3364_9_fu_681_p1));

assign c_17_fu_715_p3 = ((xor_ln3376_5_fu_695_p2[0:0] == 1'b1) ? c_16_fu_701_p2 : sext_ln3364_4_fu_661_p1);

assign c_18_fu_731_p3 = {{c_17_reg_1534}, {trunc_ln3371_5_reg_1453}};

assign c_19_fu_775_p2 = ($signed(sext_ln3364_5_fu_737_p1) - $signed(zext_ln3364_11_fu_755_p1));

assign c_1_fu_200_p2 = (zext_ln3364_fu_160_p1 - b_fu_180_p3);

assign c_20_fu_788_p3 = ((xor_ln3376_6_fu_769_p2[0:0] == 1'b1) ? c_19_fu_775_p2 : sext_ln3364_5_fu_737_p1);

assign c_21_fu_804_p3 = {{c_20_fu_788_p3}, {trunc_ln3371_6_reg_1458}};

assign c_22_fu_847_p2 = ($signed(sext_ln3364_6_fu_829_p1) - $signed(zext_ln3364_13_fu_839_p1));

assign c_23_fu_860_p3 = ((xor_ln3376_7_fu_842_p2[0:0] == 1'b1) ? c_22_fu_847_p2 : sext_ln3364_6_fu_829_p1);

assign c_24_fu_876_p3 = {{c_23_fu_860_p3}, {trunc_ln3371_7_reg_1463}};

assign c_25_fu_923_p2 = ($signed(sext_ln3364_7_fu_883_p1) - $signed(zext_ln3364_15_fu_903_p1));

assign c_26_fu_937_p3 = ((xor_ln3376_8_fu_917_p2[0:0] == 1'b1) ? c_25_fu_923_p2 : sext_ln3364_7_fu_883_p1);

assign c_27_fu_953_p3 = {{c_26_reg_1567}, {trunc_ln3371_8_reg_1468}};

assign c_28_fu_997_p2 = ($signed(sext_ln3364_8_fu_959_p1) - $signed(zext_ln3364_17_fu_977_p1));

assign c_29_fu_1010_p3 = ((xor_ln3376_9_fu_991_p2[0:0] == 1'b1) ? c_28_fu_997_p2 : sext_ln3364_8_fu_959_p1);

assign c_2_fu_214_p3 = ((xor_ln3376_fu_194_p2[0:0] == 1'b1) ? c_1_fu_200_p2 : zext_ln3364_fu_160_p1);

assign c_30_fu_1030_p3 = {{c_29_fu_1010_p3}, {trunc_ln3371_9_reg_1473}};

assign c_31_fu_1066_p2 = (or_ln_fu_1037_p3 - zext_ln3364_20_fu_1056_p1);

assign c_32_fu_1091_p3 = ((xor_ln3376_10_fu_1079_p2[0:0] == 1'b1) ? c_31_reg_1595 : or_ln_reg_1585);

assign c_33_fu_1109_p3 = {{c_32_fu_1091_p3}, {trunc_ln3371_s_reg_1479}};

assign c_34_fu_1159_p2 = (or_ln3364_1_fu_1116_p3 - zext_ln3364_22_fu_1143_p1);

assign c_35_fu_1173_p3 = ((xor_ln3376_11_fu_1153_p2[0:0] == 1'b1) ? c_34_fu_1159_p2 : or_ln3364_1_fu_1116_p3);

assign c_36_fu_1193_p3 = {{c_35_reg_1600}, {trunc_ln3371_10_reg_1485}};

assign c_37_fu_1239_p2 = (or_ln3364_2_fu_1199_p3 - zext_ln3364_24_fu_1223_p1);

assign c_38_fu_1252_p3 = ((xor_ln3376_12_fu_1233_p2[0:0] == 1'b1) ? c_37_fu_1239_p2 : or_ln3364_2_fu_1199_p3);

assign c_39_fu_1272_p3 = {{c_38_fu_1252_p3}, {trunc_ln3371_11_reg_1491}};

assign c_3_fu_240_p3 = {{c_2_fu_214_p3}, {trunc_ln4_fu_230_p4}};

assign c_40_fu_1321_p2 = (or_ln3364_3_fu_1300_p3 - zext_ln3364_26_fu_1313_p1);

assign c_41_fu_1334_p3 = ((xor_ln3376_13_fu_1316_p2[0:0] == 1'b1) ? c_40_fu_1321_p2 : or_ln3364_3_fu_1300_p3);

assign c_42_fu_1350_p3 = {{c_41_fu_1334_p3}, {trunc_ln3360_fu_1297_p1}};

assign c_4_fu_405_p2 = ($signed(sext_ln3364_fu_392_p1) - $signed(zext_ln3364_1_fu_402_p1));

assign c_5_fu_418_p3 = ((xor_ln3376_1_reg_1427[0:0] == 1'b1) ? c_4_fu_405_p2 : sext_ln3364_fu_392_p1);

assign c_6_fu_432_p3 = {{c_5_fu_418_p3}, {trunc_ln3371_1_reg_1433}};

assign c_7_fu_471_p2 = ($signed(sext_ln3364_1_fu_439_p1) - $signed(zext_ln3364_3_fu_451_p1));

assign c_8_fu_477_p3 = ((xor_ln3376_2_fu_465_p2[0:0] == 1'b1) ? c_7_fu_471_p2 : sext_ln3364_1_fu_439_p1);

assign c_9_fu_506_p3 = {{c_8_reg_1508}, {trunc_ln3371_2_reg_1438}};

assign c_fu_150_p4 = {{value_r[29:28]}};

assign icmp_ln3376_10_fu_1060_p2 = ((c_30_fu_1030_p3 < zext_ln3364_19_fu_1052_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_11_fu_1147_p2 = ((c_33_fu_1109_p3 < zext_ln3364_21_fu_1139_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_12_fu_1227_p2 = ((c_36_fu_1193_p3 < zext_ln3364_23_fu_1219_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_13_fu_1291_p2 = ((c_39_fu_1272_p3 < zext_ln3364_25_fu_1287_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_14_fu_1378_p2 = ((c_42_fu_1350_p3 < zext_ln3364_27_fu_1374_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_1_fu_260_p2 = ((c_3_fu_240_p3 < zext_ln3364_2_fu_256_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_2_fu_459_p2 = ((c_6_fu_432_p3 < zext_ln3364_4_fu_455_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_3_fu_540_p2 = ((c_9_fu_506_p3 < zext_ln3364_6_fu_536_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_4_fu_601_p2 = ((c_12_fu_582_p3 < zext_ln3364_8_fu_597_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_5_fu_689_p2 = ((c_15_fu_654_p3 < zext_ln3364_10_fu_685_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_6_fu_763_p2 = ((c_18_fu_731_p3 < zext_ln3364_12_fu_759_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_7_fu_823_p2 = ((c_21_fu_804_p3 < zext_ln3364_14_fu_819_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_8_fu_911_p2 = ((c_24_fu_876_p3 < zext_ln3364_16_fu_907_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_9_fu_985_p2 = ((c_27_fu_953_p3 < zext_ln3364_18_fu_981_p1) ? 1'b1 : 1'b0);

assign icmp_ln3376_fu_188_p2 = ((zext_ln3364_fu_160_p1 < b_fu_180_p3) ? 1'b1 : 1'b0);

assign or_ln1_fu_1390_p3 = {{a_829_fu_1342_p3}, {1'd1}};

assign or_ln3364_1_fu_1116_p3 = {{trunc_ln3371_12_fu_1105_p1}, {trunc_ln3371_s_reg_1479}};

assign or_ln3364_2_fu_1199_p3 = {{trunc_ln3371_13_reg_1612}, {trunc_ln3371_10_reg_1485}};

assign or_ln3364_3_fu_1300_p3 = {{trunc_ln3371_14_reg_1623}, {trunc_ln3371_11_reg_1491}};

assign or_ln_fu_1037_p3 = {{trunc_ln3371_fu_1026_p1}, {trunc_ln3371_9_reg_1473}};

assign sext_ln3364_1_fu_439_p1 = c_6_fu_432_p3;

assign sext_ln3364_2_fu_512_p1 = c_9_fu_506_p3;

assign sext_ln3364_3_fu_607_p1 = c_12_reg_1519;

assign sext_ln3364_4_fu_661_p1 = c_15_fu_654_p3;

assign sext_ln3364_5_fu_737_p1 = c_18_fu_731_p3;

assign sext_ln3364_6_fu_829_p1 = c_21_reg_1552;

assign sext_ln3364_7_fu_883_p1 = c_24_fu_876_p3;

assign sext_ln3364_8_fu_959_p1 = c_27_fu_953_p3;

assign sext_ln3364_fu_392_p1 = c_3_reg_1417;

assign tmp_fu_164_p3 = value_r[32'd30];

assign trunc_ln3360_fu_1297_p1 = value_r[1:0];

assign trunc_ln3371_12_fu_1105_p1 = c_32_fu_1091_p3[27:0];

assign trunc_ln3371_13_fu_1189_p1 = c_35_fu_1173_p3[27:0];

assign trunc_ln3371_14_fu_1268_p1 = c_38_fu_1252_p3[27:0];

assign trunc_ln3371_fu_1026_p1 = c_29_fu_1010_p3[27:0];

assign trunc_ln4_fu_230_p4 = {{value_r[27:26]}};

assign xor_ln3376_10_fu_1079_p2 = (icmp_ln3376_10_reg_1590 ^ 1'd1);

assign xor_ln3376_11_fu_1153_p2 = (icmp_ln3376_11_fu_1147_p2 ^ 1'd1);

assign xor_ln3376_12_fu_1233_p2 = (icmp_ln3376_12_fu_1227_p2 ^ 1'd1);

assign xor_ln3376_13_fu_1316_p2 = (icmp_ln3376_13_reg_1633 ^ 1'd1);

assign xor_ln3376_14_fu_1384_p2 = (icmp_ln3376_14_fu_1378_p2 ^ 1'd1);

assign xor_ln3376_1_fu_266_p2 = (icmp_ln3376_1_fu_260_p2 ^ 1'd1);

assign xor_ln3376_2_fu_465_p2 = (icmp_ln3376_2_fu_459_p2 ^ 1'd1);

assign xor_ln3376_3_fu_546_p2 = (icmp_ln3376_3_fu_540_p2 ^ 1'd1);

assign xor_ln3376_4_fu_620_p2 = (icmp_ln3376_4_reg_1529 ^ 1'd1);

assign xor_ln3376_5_fu_695_p2 = (icmp_ln3376_5_fu_689_p2 ^ 1'd1);

assign xor_ln3376_6_fu_769_p2 = (icmp_ln3376_6_fu_763_p2 ^ 1'd1);

assign xor_ln3376_7_fu_842_p2 = (icmp_ln3376_7_reg_1562 ^ 1'd1);

assign xor_ln3376_8_fu_917_p2 = (icmp_ln3376_8_fu_911_p2 ^ 1'd1);

assign xor_ln3376_9_fu_991_p2 = (icmp_ln3376_9_fu_985_p2 ^ 1'd1);

assign xor_ln3376_fu_194_p2 = (icmp_ln3376_fu_188_p2 ^ 1'd1);

assign zext_ln3364_10_fu_685_p1 = b_5_fu_673_p3;

assign zext_ln3364_11_fu_755_p1 = b_6_fu_748_p3;

assign zext_ln3364_12_fu_759_p1 = b_6_fu_748_p3;

assign zext_ln3364_13_fu_839_p1 = b_7_reg_1557;

assign zext_ln3364_14_fu_819_p1 = b_7_fu_811_p3;

assign zext_ln3364_15_fu_903_p1 = b_8_fu_895_p3;

assign zext_ln3364_16_fu_907_p1 = b_8_fu_895_p3;

assign zext_ln3364_17_fu_977_p1 = b_9_fu_970_p3;

assign zext_ln3364_18_fu_981_p1 = b_9_fu_970_p3;

assign zext_ln3364_19_fu_1052_p1 = b_10_fu_1044_p3;

assign zext_ln3364_1_fu_402_p1 = b_1_reg_1422;

assign zext_ln3364_20_fu_1056_p1 = b_10_fu_1044_p3;

assign zext_ln3364_21_fu_1139_p1 = b_11_fu_1131_p3;

assign zext_ln3364_22_fu_1143_p1 = b_11_fu_1131_p3;

assign zext_ln3364_23_fu_1219_p1 = b_12_fu_1212_p3;

assign zext_ln3364_24_fu_1223_p1 = b_12_fu_1212_p3;

assign zext_ln3364_25_fu_1287_p1 = b_13_fu_1279_p3;

assign zext_ln3364_26_fu_1313_p1 = b_13_reg_1628;

assign zext_ln3364_27_fu_1374_p1 = b_14_fu_1366_p3;

assign zext_ln3364_2_fu_256_p1 = b_1_fu_248_p3;

assign zext_ln3364_3_fu_451_p1 = b_2_fu_443_p3;

assign zext_ln3364_4_fu_455_p1 = b_2_fu_443_p3;

assign zext_ln3364_5_fu_532_p1 = b_3_fu_524_p3;

assign zext_ln3364_6_fu_536_p1 = b_3_fu_524_p3;

assign zext_ln3364_7_fu_617_p1 = b_4_reg_1524;

assign zext_ln3364_8_fu_597_p1 = b_4_fu_589_p3;

assign zext_ln3364_9_fu_681_p1 = b_5_fu_673_p3;

assign zext_ln3364_fu_160_p1 = c_fu_150_p4;

always @ (posedge ap_clk) begin
    b_1_reg_1422[1:0] <= 2'b01;
    b_4_reg_1524[1:0] <= 2'b01;
    b_7_reg_1557[1:0] <= 2'b01;
    b_13_reg_1628[1:0] <= 2'b01;
end

endmodule //detectFaces_int_sqrt
