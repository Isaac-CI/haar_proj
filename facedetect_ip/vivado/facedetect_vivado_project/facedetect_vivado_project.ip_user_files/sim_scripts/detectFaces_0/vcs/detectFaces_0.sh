#!/usr/bin/env bash
#**********************************************************************************************************
# Vivado (TM) v2024.2 (64-bit)
#
# Script generated by Vivado on Sun Jul 06 04:24:58 -03 2025
# SW Build 5239630 on Fri Nov 08 22:34:34 MST 2024
#
# Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
# Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved. 
#
# Filename     : detectFaces_0.sh
# Simulator    : Synopsys Verilog Compiler Simulator
# Description  : Simulation script generated by export_simulation Tcl command
# Purpose      : Run 'compile', 'elaborate', 'simulate' steps for compiling, elaborating and simulating the
#                design. The script will copy the library mapping file from the compiled library directory,
#                create design library directories and library mappings in the mapping file.
#
# Usage        : detectFaces_0.sh
#                detectFaces_0.sh [-lib_map_path] [-step] [-keep_index] [-noclean_files]*
#                detectFaces_0.sh [-reset_run]
#                detectFaces_0.sh [-reset_log]
#                detectFaces_0.sh [-help]
#
#               * The -noclean_files switch is deprecated and will not peform any function (by default, the
#                 simulator generated files will not be removed unless -reset_run switch is used)
#
# Prerequisite : Before running export_simulation, you must first compile the AMD simulation library
#                using the 'compile_simlib' Tcl command (for more information, run 'compile_simlib -help'
#                command in the Vivado Tcl shell). After compiling the library, specify the -lib_map_path
#                switch with the directory path where the library is created while generating the script
#                with export_simulation.
#
#                Alternatively, you can set the library path by setting the following project property:-
#
#                 set_property compxlib.<simulator>_compiled_library_dir <path> [current_project]
#
#                You can also point to the simulation library by either setting the 'lib_map_path' global
#                variable in this script or specify it with the '-lib_map_path' switch while executing this
#                script (type 'detectFaces_0.sh -help' for more information).
#
#                Note: For pure RTL based designs, the -lib_map_path switch can be specified later with the
#                generated script, but if design is targetted for system simulation containing SystemC/C++/C
#                sources, then the library path MUST be specified upfront when calling export_simulation.
#
#                For more information, refer 'Vivado Design Suite User Guide:Logic simulation (UG900)'
#
#**********************************************************************************************************

# catch pipeline exit status
set -Eeuo pipefail

# set vhdlan compile options
vhdlan_opts="-full64 -l .tmp_log"

# set vlogan compile options
vlogan_opts="-full64 -l .tmp_log"

# set vcs elaboration options
vcs_elab_opts="-full64 -debug_acc -t ps -licqueue -l elaborate.log"

# set vcs simulation options
vcs_sim_opts="-ucli -licqueue -l simulate.log "

# set design libraries
design_libs=(xbip_utils_v3_0_14 axi_utils_v2_0_10 xbip_pipe_v3_0_10 xbip_dsp48_wrapper_v3_0_6 mult_gen_v12_0_22 floating_point_v7_1_19 xil_defaultlib)

# simulation root library directory
sim_lib_dir="vcs_lib"

# script info
echo -e "detectFaces_0.sh - Script generated by export_simulation (Vivado v2024.2 (64-bit)-id)\n"

# main steps
run()
{
  check_args $*
  setup
  if [[ ($b_step == 1) ]]; then
    case $step in
      "compile" )
       init_lib
       compile
      ;;
      "elaborate" )
       elaborate
      ;;
      "simulate" )
       simulate
      ;;
      * )
        echo -e "ERROR: Invalid or missing step '$step' (type \"./detectFaces_0.sh -help\" for more information)\n"
        exit 1
      esac
  else
    init_lib
    compile
    elaborate
    simulate
  fi
}

# RUN_STEP: <compile>
compile()
{
  vhdlan -work xbip_utils_v3_0_14 $vhdlan_opts \
  "../../../ipstatic/hdl/xbip_utils_v3_0_vh_rfs.vhd" \
  2>&1 | tee compile.log; cat .tmp_log > vhdlan.log 2>/dev/null

  vhdlan -work axi_utils_v2_0_10 $vhdlan_opts \
  "../../../ipstatic/hdl/axi_utils_v2_0_vh_rfs.vhd" \
  2>&1 | tee -a compile.log; cat .tmp_log >> vhdlan.log 2>/dev/null

  vhdlan -work xbip_pipe_v3_0_10 $vhdlan_opts \
  "../../../ipstatic/hdl/xbip_pipe_v3_0_vh_rfs.vhd" \
  2>&1 | tee -a compile.log; cat .tmp_log >> vhdlan.log 2>/dev/null

  vhdlan -work xbip_dsp48_wrapper_v3_0_6 $vhdlan_opts \
  "../../../ipstatic/hdl/xbip_dsp48_wrapper_v3_0_vh_rfs.vhd" \
  2>&1 | tee -a compile.log; cat .tmp_log >> vhdlan.log 2>/dev/null

  vhdlan -work mult_gen_v12_0_22 $vhdlan_opts \
  "../../../ipstatic/hdl/mult_gen_v12_0_vh_rfs.vhd" \
  2>&1 | tee -a compile.log; cat .tmp_log >> vhdlan.log 2>/dev/null

  vhdlan -work floating_point_v7_1_19 $vhdlan_opts \
  "../../../ipstatic/hdl/floating_point_v7_1_rfs.vhd" \
  2>&1 | tee -a compile.log; cat .tmp_log >> vhdlan.log 2>/dev/null

  vlogan -work floating_point_v7_1_19 $vlogan_opts +v2k \
  "../../../ipstatic/hdl/floating_point_v7_1_rfs.v" \
  2>&1 | tee -a compile.log; cat .tmp_log > vlogan.log 2>/dev/null

  vlogan -work xil_defaultlib $vlogan_opts +v2k \
  "../../../ipstatic/hdl/ip/detectFaces_dadd_64ns_64ns_64_7_full_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_dcmp_64ns_64ns_1_2_no_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_dmul_64ns_64ns_64_7_max_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_fcmp_32ns_32ns_1_2_no_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_fdiv_32ns_32ns_32_16_no_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_fmul_32ns_32ns_32_4_max_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_fpext_32ns_64_2_no_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_sitodp_32s_64_6_no_dsp_1_ip.v" \
  "../../../ipstatic/hdl/ip/detectFaces_sitofp_32ns_32_6_no_dsp_1_ip.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_ama_addmuladd_4ns_5ns_5ns_5ns_10_4_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_ama_addmuladd_5ns_5ns_5ns_5ns_10_4_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_dadd_64ns_64ns_64_7_full_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_Data_RAM_AUTO_1R1W.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_dcmp_64ns_64ns_1_2_no_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_detectFaces_Pipeline_imageScalerL1_imageScalerL1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_detectFaces_Pipeline_VITIS_LOOP_2773_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_detectFaces_Pipeline_VITIS_LOOP_2778_2.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_detectFaces_Pipeline_VITIS_LOOP_2839_3.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_dmul_64ns_64ns_64_7_max_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_fcmp_32ns_32ns_1_2_no_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_fdiv_32ns_32ns_32_16_no_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_flow_control_loop_pipe_sequential_init.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_fmul_32ns_32ns_32_4_max_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_fpext_32ns_64_2_no_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_IMG1_data_RAM_AUTO_1R1W.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_int_sqrt.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mac_muladd_5ns_5ns_5ns_10_4_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mac_muladd_20s_14ns_32ns_32_4_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mac_muladd_20s_14ns_32s_32_4_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_8ns_8ns_16_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_8ns_24s_24_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_9ns_26s_32_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_13s_16ns_29_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_13s_20s_32_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_5ns_20_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_6ns_21_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_6s_22_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_7ns_22_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_7s_23_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_8ns_23_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_8s_24_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_9ns_24_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_9s_25_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_10ns_25_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_10s_26_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_11s_27_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_16ns_12ns_27_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_mul_20s_20s_32_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_L_RAM_AUTO_1R1W.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_alpha1_array_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_alpha2_array_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_bank_mapping_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_offset_mapping_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array0_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array1_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array2_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array3_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array4_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array5_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array6_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array7_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array8_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array9_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array10_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_rectangles_array11_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_tree_thresh_array_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_weights_array0_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_weights_array1_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Filters_weights_array2_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x2.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x3.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x4.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x5.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x6.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x7.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x8.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x9.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x10.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x11.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x12.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x13.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x14.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x15.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x16.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x17.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x18.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x19.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x20.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x21.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x22.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x23.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_Pipeline_Initialize2x24.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_stages_array_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_processImage_stages_thresh_array_ROM_AUTO_1R.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_result_x_Scale_RAM_AUTO_1R1W.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sdiv_26ns_32ns_24_30_seq_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sdiv_27ns_32ns_26_31_seq_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sitodp_32s_64_6_no_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sitofp_32ns_32_6_no_dsp_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_29_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_35_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_39_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_41_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_43_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_47_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_49_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_51_32_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_53_32_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_55_32_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_57_5_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces_sparsemux_57_32_18_1_1.v" \
  "../../../ipstatic/hdl/verilog/detectFaces.v" \
  "../../../../facedetect_vivado_project.gen/sources_1/ip/detectFaces_0/sim/detectFaces_0.v" \
  2>&1 | tee -a compile.log; cat .tmp_log >> vlogan.log 2>/dev/null

  vlogan -work xil_defaultlib $vlogan_opts +v2k \
  glbl.v \
  2>&1 | tee -a compile.log; cat .tmp_log >> vlogan.log 2>/dev/null
}

# RUN_STEP: <elaborate>
elaborate()
{
  vcs $vcs_elab_opts xil_defaultlib.detectFaces_0 xil_defaultlib.glbl -o detectFaces_0_simv
}

# RUN_STEP: <simulate>
simulate()
{
  ./detectFaces_0_simv $vcs_sim_opts -do simulate.do
}

# STEP: setup
setup()
{
  # delete previous files for a clean rerun
  if [[ ($b_reset_run == 1) ]]; then
    reset_run
    echo -e "INFO: Simulation run files deleted.\n"
    exit 0
  fi

 # delete previous log files
  if [[ ($b_reset_log == 1) ]]; then
    reset_log
    echo -e "INFO: Simulation run log files deleted.\n"
    exit 0
  fi

  # add any setup/initialization commands here:-

  # <user specific commands>

}

# simulator index file/library directory processing
init_lib()
{
  if [[ ($b_keep_index == 1) ]]; then
    # keep previous design library mappings
    true
  else
    # define design library mappings
    create_lib_mappings
  fi

  if [[ ($b_keep_index == 1) ]]; then
    # do not recreate design library directories
    true
  else
    # create design library directories
    create_lib_dir
  fi
}

# define design library mappings
create_lib_mappings()
{
  file="synopsys_sim.setup"
  if [[ -e $file ]]; then
    if [[ ($lib_map_path == "") ]]; then
      return
    else
      rm -rf $file
    fi
  fi

  touch $file

  if [[ ($lib_map_path == "") ]]; then
    lib_map_path="/home/aanout/Documents/mestrado/facedetect_fpga_project/vivado/facedetect_vivado_project/facedetect_vivado_project.cache/compile_simlib/vcs"
  fi

  echo "LIBRARY_SCAN=TRUE" >> $file

  for (( i=0; i<${#design_libs[*]}; i++ )); do
    lib="${design_libs[i]}"
    mapping="$lib:$sim_lib_dir/$lib"
    echo $mapping >> $file
  done

  if [[ ($lib_map_path != "") ]]; then
    incl_ref="OTHERS=$lib_map_path/synopsys_sim.setup"
    echo $incl_ref >> $file
  fi
}

# create design library directory
create_lib_dir()
{
  if [[ -e $sim_lib_dir ]]; then
    rm -rf $sim_lib_dir
  fi
  for (( i=0; i<${#design_libs[*]}; i++ )); do
    lib="${design_libs[i]}"
    lib_dir="$sim_lib_dir/$lib"
    if [[ ! -e $lib_dir ]]; then
      mkdir -p $lib_dir
    fi
  done
}

# delete generated data from the previous run
reset_run()
{
  files_to_remove=(ucli.key detectFaces_0_simv vlogan.log vhdlan.log compile.log elaborate.log simulate.log .tmp_log .vlogansetup.env .vlogansetup.args .vcs_lib_lock scirocco_command.log lib_sc.so 64 AN.DB csrc detectFaces_0_simv.daidir vcs_lib c.obj)
  for (( i=0; i<${#files_to_remove[*]}; i++ )); do
    file="${files_to_remove[i]}"
    if [[ -e $file ]]; then
      rm -rf $file
    fi
  done
}

# delete generated log files from the previous run
reset_log()
{
  files_to_remove=(vlogan.log vhdlan.log compile.log elaborate.log simulate.log .tmp_log)
  for (( i=0; i<${#files_to_remove[*]}; i++ )); do
    file="${files_to_remove[i]}"
    if [[ -e $file ]]; then
      rm -rf $file
    fi
  done
}

# check switch argument value
check_arg_value()
{
  if [[ ($1 == "-step") && (($2 != "compile") && ($2 != "elaborate") && ($2 != "simulate")) ]];then
    echo -e "ERROR: Invalid or missing step '$2' (type \"./top.sh -help\" for more information)\n"
    exit 1
  fi

  if [[ ($1 == "-lib_map_path") && ($2 == "") ]];then
    echo -e "ERROR: Simulation library directory path not specified (type \"./detectFaces_0.sh -help\" for more information)\n"
    exit 1
  fi
}

# check command line arguments
check_args()
{
  arg_count=$#
  if [[ ("$#" == 1) && (("$1" == "-help") || ("$1" == "-h")) ]]; then
    usage
  fi
  while [[ "$#" -gt 0 ]]; do
    case $1 in
      -step)          check_arg_value $1 $2;step=$2;         b_step=1;         shift;;
      -lib_map_path)  check_arg_value $1 $2;lib_map_path=$2; b_lib_map_path=1; shift;;
      -gen_bypass)    b_gen_bypass=1    ;;
      -reset_run)     b_reset_run=1     ;;
      -reset_log)     b_reset_log=1     ;;
      -keep_index)    b_keep_index=1    ;;
      -noclean_files) b_noclean_files=1 ;;
      -help|-h)       ;;
      *) echo -e "ERROR: Invalid option specified '$1' (type "./top.sh -help" for more information)\n"; exit 1 ;;
    esac
     shift
  done

  # -reset_run is not applicable with other switches
  if [[ ("$arg_count" -gt 1) && ($b_reset_run == 1) ]]; then
    echo -e "ERROR: -reset_run switch is not applicable with other switches (type \"./top.sh -help\" for more information)\n"
    exit 1
  fi

  # -reset_log is not applicable with other switches
  if [[ ("$arg_count" -gt 1) && ($b_reset_log == 1) ]]; then
    echo -e "ERROR: -reset_log switch is not applicable with other switches (type \"./top.sh -help\" for more information)\n"
    exit 1
  fi

  # -keep_index is not applicable with other switches
  if [[ ("$arg_count" -gt 1) && ($b_keep_index == 1) ]]; then
    echo -e "ERROR: -keep_index switch is not applicable with other switches (type \"./top.sh -help\" for more information)\n"
    exit 1
  fi

  # -noclean_files is not applicable with other switches
  if [[ ("$arg_count" -gt 1) && ($b_noclean_files == 1) ]]; then
    echo -e "ERROR: -noclean_files switch is not applicable with other switches (type \"./top.sh -help\" for more information)\n"
    exit 1
  fi
}

# script usage
usage()
{
  msg="Usage: detectFaces_0.sh [-help]\n\
Usage: detectFaces_0.sh [-step]\n\
Usage: detectFaces_0.sh [-lib_map_path]\n\
Usage: detectFaces_0.sh [-reset_run]\n\
Usage: detectFaces_0.sh [-reset_log]\n\
Usage: detectFaces_0.sh [-keep_index]\n\
Usage: detectFaces_0.sh [-noclean_files]\n\n\
[-help] -- Print help information for this script\n\n\
[-step <name>] -- Execute specified step (compile, elaborate, simulate)\n\n\
[-lib_map_path <path>] -- Compiled simulation library directory path. The simulation library is compiled\n\
using the compile_simlib tcl command. Please see 'compile_simlib -help' for more information.\n\n\
[-reset_run] -- Delete simulator generated data files from the previous run and recreate simulator setup\n\
file/library mappings for a clean run. This switch will not execute steps defined in the script.\n\n\
NOTE: To keep simulator index file settings from the previous run, use the -keep_index switch\n\
NOTE: To regenerate simulator index file but keep the simulator generated files, use the -noclean_files switch\n\n\
[-reset_log] -- Delete simulator generated log files from the previous run\n\n\
[-keep_index] -- Keep simulator index file settings from the previous run\n\n\
[-noclean_files] -- Reset previous run, but do not remove simulator generated files from the previous run\n"
  echo -e $msg
  exit 0
}

# initialize globals
step=""
lib_map_path=""
b_step=0
b_lib_map_path=0
b_gen_bypass=0
b_reset_run=0
b_reset_log=0
b_keep_index=0
b_noclean_files=0

# launch script
run $*
