// ==============================================================
// Generated by Vitis HLS v2024.2
// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// Copyright 2022-2024 Advanced Micro Devices, Inc. All Rights Reserved.
// ==============================================================

`timescale 1 ns / 1 ps 

module detectFaces_processImage_Pipeline_Filters (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        haar_counter,
        stage_sum,
        add_ln283,
        zext_ln237,
        empty_13,
        empty,
        SUM1_data_address0,
        SUM1_data_ce0,
        SUM1_data_q0,
        SUM1_data_address1,
        SUM1_data_ce1,
        SUM1_data_q1,
        SUM1_data_address2,
        SUM1_data_ce2,
        SUM1_data_q2,
        SUM1_data_address3,
        SUM1_data_ce3,
        SUM1_data_q3,
        SUM1_data_address4,
        SUM1_data_ce4,
        SUM1_data_q4,
        SUM1_data_address5,
        SUM1_data_ce5,
        SUM1_data_q5,
        SUM1_data_address6,
        SUM1_data_ce6,
        SUM1_data_q6,
        SUM1_data_address7,
        SUM1_data_ce7,
        SUM1_data_q7,
        SUM1_data_address8,
        SUM1_data_ce8,
        SUM1_data_q8,
        SUM1_data_address9,
        SUM1_data_ce9,
        SUM1_data_q9,
        SUM1_data_address10,
        SUM1_data_ce10,
        SUM1_data_q10,
        SUM1_data_address11,
        SUM1_data_ce11,
        SUM1_data_q11,
        stage_sum_1_out,
        stage_sum_1_out_ap_vld
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [12:0] haar_counter;
input  [31:0] stage_sum;
input  [7:0] add_ln283;
input  [15:0] zext_ln237;
input  [7:0] empty_13;
input  [16:0] empty;
output  [16:0] SUM1_data_address0;
output   SUM1_data_ce0;
input  [31:0] SUM1_data_q0;
output  [16:0] SUM1_data_address1;
output   SUM1_data_ce1;
input  [31:0] SUM1_data_q1;
output  [16:0] SUM1_data_address2;
output   SUM1_data_ce2;
input  [31:0] SUM1_data_q2;
output  [16:0] SUM1_data_address3;
output   SUM1_data_ce3;
input  [31:0] SUM1_data_q3;
output  [16:0] SUM1_data_address4;
output   SUM1_data_ce4;
input  [31:0] SUM1_data_q4;
output  [16:0] SUM1_data_address5;
output   SUM1_data_ce5;
input  [31:0] SUM1_data_q5;
output  [16:0] SUM1_data_address6;
output   SUM1_data_ce6;
input  [31:0] SUM1_data_q6;
output  [16:0] SUM1_data_address7;
output   SUM1_data_ce7;
input  [31:0] SUM1_data_q7;
output  [16:0] SUM1_data_address8;
output   SUM1_data_ce8;
input  [31:0] SUM1_data_q8;
output  [16:0] SUM1_data_address9;
output   SUM1_data_ce9;
input  [31:0] SUM1_data_q9;
output  [16:0] SUM1_data_address10;
output   SUM1_data_ce10;
input  [31:0] SUM1_data_q10;
output  [16:0] SUM1_data_address11;
output   SUM1_data_ce11;
input  [31:0] SUM1_data_q11;
output  [31:0] stage_sum_1_out;
output   stage_sum_1_out_ap_vld;

reg ap_idle;
reg stage_sum_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_block_pp0_stage0_subdone;
wire   [0:0] icmp_ln283_fu_599_p2;
reg    ap_condition_exit_pp0_iter0_stage0;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [11:0] tree_thresh_array_address0;
wire   [12:0] tree_thresh_array_q0;
wire   [11:0] weights_array0_address0;
wire   [12:0] weights_array0_q0;
wire   [11:0] weights_array1_address0;
wire   [13:0] weights_array1_q0;
reg   [24:0] cascadeClassifier_int_320_int_320_MyPoint_coord_8;
reg   [24:0] cascadeClassifier_int_320_int_320_MyPoint_coord_9;
reg   [24:0] p_ZZ17cascadeClassifierPA320_iS0_7MyPointE5coord_10;
wire   [11:0] weights_array2_address0;
wire   [13:0] weights_array2_q0;
wire   [11:0] alpha1_array_address0;
wire   [13:0] alpha1_array_q0;
wire   [11:0] alpha2_array_address0;
wire   [13:0] alpha2_array_q0;
wire   [11:0] rectangles_array0_address0;
wire   [4:0] rectangles_array0_q0;
wire   [11:0] rectangles_array2_address0;
wire   [4:0] rectangles_array2_q0;
wire   [11:0] rectangles_array1_address0;
wire   [4:0] rectangles_array1_q0;
wire   [11:0] rectangles_array3_address0;
wire   [4:0] rectangles_array3_q0;
wire   [11:0] rectangles_array4_address0;
wire   [4:0] rectangles_array4_q0;
wire   [11:0] rectangles_array6_address0;
wire   [4:0] rectangles_array6_q0;
wire   [11:0] rectangles_array5_address0;
wire   [4:0] rectangles_array5_q0;
wire   [11:0] rectangles_array7_address0;
wire   [4:0] rectangles_array7_q0;
wire   [11:0] rectangles_array8_address0;
wire   [4:0] rectangles_array8_q0;
wire   [11:0] rectangles_array10_address0;
wire   [3:0] rectangles_array10_q0;
wire   [11:0] rectangles_array9_address0;
wire   [4:0] rectangles_array9_q0;
wire   [11:0] rectangles_array11_address0;
wire   [3:0] rectangles_array11_q0;
wire    ap_block_pp0_stage0_11001;
wire   [28:0] zext_ln237_cast_fu_573_p1;
reg   [28:0] zext_ln237_cast_reg_1454;
reg   [0:0] icmp_ln283_reg_1459;
reg   [0:0] icmp_ln283_reg_1459_pp0_iter1_reg;
reg   [0:0] icmp_ln283_reg_1459_pp0_iter2_reg;
reg   [0:0] icmp_ln283_reg_1459_pp0_iter3_reg;
reg   [0:0] icmp_ln283_reg_1459_pp0_iter4_reg;
reg   [0:0] icmp_ln283_reg_1459_pp0_iter5_reg;
reg   [0:0] icmp_ln283_reg_1459_pp0_iter6_reg;
wire   [63:0] zext_ln283_fu_605_p1;
reg   [63:0] zext_ln283_reg_1463;
reg   [63:0] zext_ln283_reg_1463_pp0_iter1_reg;
reg   [63:0] zext_ln283_reg_1463_pp0_iter2_reg;
reg   [63:0] zext_ln283_reg_1463_pp0_iter3_reg;
wire   [16:0] tr0_fu_636_p2;
reg   [16:0] tr0_reg_1533;
reg   [4:0] tr0_1_reg_1540;
wire   [16:0] tr1_fu_658_p2;
reg   [16:0] tr1_reg_1545;
reg   [4:0] tr1_1_reg_1552;
reg   [3:0] tr2_1_reg_1557;
wire   [16:0] add_ln307_1_fu_712_p2;
reg   [16:0] add_ln307_1_reg_1562;
wire   [7:0] add_ln309_fu_718_p2;
reg   [7:0] add_ln309_reg_1568;
wire   [16:0] add_ln312_1_fu_748_p2;
reg   [16:0] add_ln312_1_reg_1574;
wire   [7:0] add_ln314_fu_754_p2;
reg   [7:0] add_ln314_reg_1580;
wire   [0:0] and_ln317_1_fu_842_p2;
reg   [0:0] and_ln317_1_reg_1586;
reg   [0:0] and_ln317_1_reg_1586_pp0_iter2_reg;
reg   [0:0] and_ln317_1_reg_1586_pp0_iter3_reg;
wire   [16:0] add_ln319_3_fu_877_p2;
reg   [16:0] add_ln319_3_reg_1590;
wire   [16:0] add_ln319_1_fu_883_p2;
reg   [16:0] add_ln319_1_reg_1596;
wire   [7:0] add_ln321_fu_888_p2;
reg   [7:0] add_ln321_reg_1603;
wire   [16:0] add_ln308_1_fu_917_p2;
reg   [16:0] add_ln308_1_reg_1614;
wire   [16:0] add_ln309_1_fu_950_p2;
reg   [16:0] add_ln309_1_reg_1619;
wire   [16:0] add_ln310_fu_955_p2;
reg   [16:0] add_ln310_reg_1624;
wire   [16:0] add_ln313_1_fu_975_p2;
reg   [16:0] add_ln313_1_reg_1634;
wire   [16:0] add_ln314_1_fu_1008_p2;
reg   [16:0] add_ln314_1_reg_1639;
wire   [16:0] add_ln315_fu_1013_p2;
reg   [16:0] add_ln315_reg_1644;
wire   [16:0] add_ln320_1_fu_1033_p2;
reg   [16:0] add_ln320_1_reg_1654;
wire   [16:0] add_ln321_1_fu_1066_p2;
reg   [16:0] add_ln321_1_reg_1659;
wire   [16:0] add_ln322_fu_1071_p2;
reg   [16:0] add_ln322_reg_1664;
wire   [24:0] trunc_ln307_fu_1077_p1;
reg   [24:0] trunc_ln307_reg_1669;
wire   [24:0] trunc_ln312_fu_1093_p1;
reg   [24:0] trunc_ln312_reg_1689;
wire   [24:0] trunc_ln319_fu_1109_p1;
reg   [24:0] trunc_ln319_reg_1709;
wire   [24:0] trunc_ln309_fu_1129_p1;
reg   [24:0] trunc_ln309_reg_1729;
wire   [24:0] trunc_ln310_fu_1133_p1;
reg   [24:0] trunc_ln310_reg_1734;
wire   [24:0] trunc_ln314_fu_1141_p1;
reg   [24:0] trunc_ln314_reg_1739;
wire   [24:0] trunc_ln315_fu_1145_p1;
reg   [24:0] trunc_ln315_reg_1744;
wire   [24:0] trunc_ln322_fu_1192_p1;
wire   [25:0] sub_ln370_fu_1203_p2;
reg   [25:0] sub_ln370_reg_1759;
wire   [25:0] sub_ln371_fu_1216_p2;
reg   [25:0] sub_ln371_reg_1769;
reg  signed [12:0] tree_thresh_array_load_reg_1794;
wire   [26:0] add_ln370_fu_1237_p2;
reg  signed [26:0] add_ln370_reg_1799;
reg  signed [12:0] weights_array0_load_reg_1804;
wire   [26:0] add_ln371_fu_1258_p2;
reg  signed [26:0] add_ln371_reg_1809;
reg   [13:0] weights_array1_load_reg_1814;
wire   [26:0] newSecond_fu_1308_p2;
reg  signed [26:0] newSecond_reg_1819;
reg   [13:0] weights_array2_load_reg_1824;
reg   [13:0] return_value_reg_1829;
reg   [13:0] return_value_reg_1829_pp0_iter6_reg;
reg   [13:0] return_value_reg_1829_pp0_iter7_reg;
reg   [13:0] return_value_1_reg_1834;
reg   [13:0] return_value_1_reg_1834_pp0_iter6_reg;
reg   [13:0] return_value_1_reg_1834_pp0_iter7_reg;
wire   [28:0] t_fu_1317_p2;
reg   [28:0] t_reg_1839;
wire   [31:0] sum2_fu_565_p2;
reg   [31:0] sum2_reg_1844;
wire   [31:0] mul_ln373_fu_561_p2;
reg   [31:0] mul_ln373_reg_1849;
wire   [31:0] mul_ln373_1_fu_569_p2;
reg   [31:0] mul_ln373_1_reg_1854;
wire   [0:0] icmp_ln285_fu_1355_p2;
reg   [0:0] icmp_ln285_reg_1859;
wire   [0:0] icmp_ln375_fu_1373_p2;
reg   [0:0] icmp_ln375_reg_1864;
reg    ap_condition_exit_pp0_iter7_stage0;
wire   [24:0] ap_phi_reg_pp0_iter0_storemerge_reg_550;
reg   [24:0] ap_phi_reg_pp0_iter1_storemerge_reg_550;
reg   [24:0] ap_phi_reg_pp0_iter2_storemerge_reg_550;
reg   [24:0] ap_phi_reg_pp0_iter3_storemerge_reg_550;
reg   [24:0] ap_phi_reg_pp0_iter4_storemerge_reg_550;
reg   [24:0] ap_phi_reg_pp0_iter5_storemerge_reg_550;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln307_2_fu_907_p1;
wire   [63:0] zext_ln312_2_fu_965_p1;
wire   [63:0] zext_ln319_2_fu_1023_p1;
wire   [63:0] zext_ln308_fu_1081_p1;
wire   [63:0] zext_ln309_2_fu_1085_p1;
wire   [63:0] zext_ln310_fu_1089_p1;
wire   [63:0] zext_ln313_fu_1097_p1;
wire   [63:0] zext_ln314_2_fu_1101_p1;
wire   [63:0] zext_ln315_fu_1105_p1;
wire   [63:0] zext_ln320_fu_1113_p1;
wire   [63:0] zext_ln321_2_fu_1117_p1;
wire   [63:0] zext_ln322_fu_1121_p1;
wire   [24:0] trunc_ln320_fu_1167_p1;
wire   [24:0] trunc_ln321_fu_1171_p1;
reg   [31:0] stage_sum_1_fu_116;
wire   [31:0] stage_sum_3_fu_1403_p2;
wire    ap_loop_init;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [7:0] j_fu_120;
wire   [7:0] j_2_fu_1349_p2;
reg   [12:0] haar_counter_1_fu_124;
wire   [12:0] add_ln339_fu_621_p2;
reg   [12:0] ap_sig_allocacmp_haar_counter_2;
wire    ap_block_pp0_stage0_01001;
reg    rectangles_array0_ce0_local;
reg    rectangles_array2_ce0_local;
reg    rectangles_array1_ce0_local;
reg    rectangles_array3_ce0_local;
reg    rectangles_array4_ce0_local;
reg    rectangles_array6_ce0_local;
reg    rectangles_array5_ce0_local;
reg    rectangles_array7_ce0_local;
reg    rectangles_array8_ce0_local;
reg    rectangles_array10_ce0_local;
reg    rectangles_array9_ce0_local;
reg    rectangles_array11_ce0_local;
reg    SUM1_data_ce11_local;
reg    SUM1_data_ce10_local;
reg    SUM1_data_ce9_local;
reg    SUM1_data_ce8_local;
reg    SUM1_data_ce7_local;
reg    SUM1_data_ce6_local;
reg    SUM1_data_ce5_local;
reg    SUM1_data_ce4_local;
reg    SUM1_data_ce3_local;
reg    SUM1_data_ce2_local;
reg    SUM1_data_ce1_local;
reg    SUM1_data_ce0_local;
reg    tree_thresh_array_ce0_local;
reg    weights_array0_ce0_local;
reg    weights_array1_ce0_local;
reg    weights_array2_ce0_local;
reg    alpha1_array_ce0_local;
reg    alpha2_array_ce0_local;
wire   [13:0] sum2_fu_565_p0;
wire   [13:0] mul_ln373_1_fu_569_p0;
wire   [7:0] trunc_ln283_fu_595_p1;
wire   [16:0] zext_ln292_fu_632_p1;
wire   [7:0] zext_ln294_fu_641_p1;
wire   [16:0] zext_ln297_fu_654_p1;
wire   [7:0] zext_ln299_fu_663_p1;
wire   [7:0] tr0_2_fu_645_p2;
wire   [15:0] tmp_2_fu_688_p3;
wire   [13:0] tmp_3_fu_700_p3;
wire   [16:0] zext_ln307_fu_696_p1;
wire   [16:0] zext_ln307_1_fu_708_p1;
wire   [7:0] zext_ln276_1_fu_650_p1;
wire   [7:0] tr1_2_fu_667_p2;
wire   [15:0] tmp_6_fu_724_p3;
wire   [13:0] tmp_7_fu_736_p3;
wire   [16:0] zext_ln312_fu_732_p1;
wire   [16:0] zext_ln312_1_fu_744_p1;
wire   [7:0] zext_ln276_3_fu_672_p1;
wire   [3:0] trunc_ln317_fu_760_p1;
wire   [0:0] tmp_10_fu_770_p3;
wire   [3:0] or_ln317_fu_764_p2;
wire   [3:0] trunc_ln317_1_fu_786_p1;
wire   [0:0] tmp_11_fu_796_p3;
wire   [3:0] or_ln317_1_fu_790_p2;
wire   [4:0] tmp2_fu_804_p3;
wire   [4:0] tmp1_fu_778_p3;
wire   [4:0] or_ln317_2_fu_812_p2;
wire   [0:0] icmp_ln317_1_fu_824_p2;
wire   [0:0] icmp_ln317_2_fu_830_p2;
wire   [0:0] and_ln317_fu_836_p2;
wire   [0:0] icmp_ln317_fu_818_p2;
wire   [7:0] zext_ln276_6_fu_680_p1;
wire   [7:0] add_ln319_fu_848_p2;
wire   [15:0] tmp_12_fu_853_p3;
wire   [13:0] tmp_13_fu_865_p3;
wire   [16:0] zext_ln319_fu_861_p1;
wire   [16:0] zext_ln319_1_fu_873_p1;
wire   [16:0] zext_ln276_4_fu_676_p1;
wire   [7:0] zext_ln276_7_fu_684_p1;
wire   [16:0] add_ln307_fu_903_p2;
wire   [16:0] zext_ln276_fu_894_p1;
wire   [16:0] add_ln308_fu_912_p2;
wire   [15:0] tmp_4_fu_922_p3;
wire   [13:0] tmp_5_fu_933_p3;
wire   [16:0] zext_ln309_fu_929_p1;
wire   [16:0] zext_ln309_1_fu_940_p1;
wire   [16:0] add_ln309_2_fu_944_p2;
wire   [16:0] add_ln312_fu_961_p2;
wire   [16:0] zext_ln276_2_fu_897_p1;
wire   [16:0] add_ln313_fu_970_p2;
wire   [15:0] tmp_8_fu_980_p3;
wire   [13:0] tmp_9_fu_991_p3;
wire   [16:0] zext_ln314_fu_987_p1;
wire   [16:0] zext_ln314_1_fu_998_p1;
wire   [16:0] add_ln314_2_fu_1002_p2;
wire   [16:0] add_ln319_2_fu_1019_p2;
wire   [16:0] zext_ln276_5_fu_900_p1;
wire   [16:0] add_ln320_fu_1028_p2;
wire   [15:0] tmp_14_fu_1038_p3;
wire   [13:0] tmp_15_fu_1049_p3;
wire   [16:0] zext_ln321_fu_1045_p1;
wire   [16:0] zext_ln321_1_fu_1056_p1;
wire   [16:0] add_ln321_2_fu_1060_p2;
wire   [24:0] trunc_ln308_fu_1125_p1;
wire   [25:0] zext_ln370_fu_1196_p1;
wire   [25:0] zext_ln370_1_fu_1199_p1;
wire   [24:0] trunc_ln313_fu_1137_p1;
wire   [25:0] zext_ln371_fu_1209_p1;
wire   [25:0] zext_ln371_1_fu_1212_p1;
wire  signed [26:0] sext_ln370_fu_1222_p1;
wire   [26:0] zext_ln370_2_fu_1225_p1;
wire   [26:0] sub_ln370_1_fu_1228_p2;
wire   [26:0] zext_ln370_3_fu_1234_p1;
wire  signed [26:0] sext_ln371_fu_1243_p1;
wire   [26:0] zext_ln371_2_fu_1246_p1;
wire   [26:0] sub_ln371_1_fu_1249_p2;
wire   [26:0] zext_ln371_3_fu_1255_p1;
wire   [25:0] zext_ln372_fu_1268_p1;
wire   [25:0] zext_ln372_1_fu_1276_p1;
wire   [25:0] sub_ln372_fu_1280_p2;
wire   [26:0] zext_ln372_3_fu_1298_p1;
wire   [26:0] zext_ln372_2_fu_1294_p1;
wire  signed [26:0] sext_ln372_fu_1286_p1;
wire   [26:0] newFirst_fu_1302_p2;
wire   [15:0] t_fu_1317_p1;
wire   [31:0] add_ln373_fu_1364_p2;
wire   [31:0] final_sum_fu_1368_p2;
wire  signed [31:0] sext_ln362_1_fu_1361_p1;
wire   [13:0] return_value_3_fu_1394_p3;
wire  signed [31:0] sext_ln368_fu_1399_p1;
wire   [31:0] stage_sum_2_fu_1387_p3;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg   [0:0] ap_NS_fsm;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ready_sig;
wire    ap_done_sig;
wire   [31:0] mul_ln373_1_fu_569_p00;
wire   [31:0] sum2_fu_565_p00;
reg    ap_condition_1316;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 cascadeClassifier_int_320_int_320_MyPoint_coord_8 = 25'd0;
#0 cascadeClassifier_int_320_int_320_MyPoint_coord_9 = 25'd0;
#0 p_ZZ17cascadeClassifierPA320_iS0_7MyPointE5coord_10 = 25'd0;
#0 stage_sum_1_fu_116 = 32'd0;
#0 j_fu_120 = 8'd0;
#0 haar_counter_1_fu_124 = 13'd0;
#0 ap_done_reg = 1'b0;
end

detectFaces_processImage_Pipeline_Filters_tree_thresh_array_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
tree_thresh_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tree_thresh_array_address0),
    .ce0(tree_thresh_array_ce0_local),
    .q0(tree_thresh_array_q0)
);

detectFaces_processImage_Pipeline_Filters_weights_array0_ROM_AUTO_1R #(
    .DataWidth( 13 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
weights_array0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_array0_address0),
    .ce0(weights_array0_ce0_local),
    .q0(weights_array0_q0)
);

detectFaces_processImage_Pipeline_Filters_weights_array1_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
weights_array1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_array1_address0),
    .ce0(weights_array1_ce0_local),
    .q0(weights_array1_q0)
);

detectFaces_processImage_Pipeline_Filters_weights_array2_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
weights_array2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(weights_array2_address0),
    .ce0(weights_array2_ce0_local),
    .q0(weights_array2_q0)
);

detectFaces_processImage_Pipeline_Filters_alpha1_array_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
alpha1_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha1_array_address0),
    .ce0(alpha1_array_ce0_local),
    .q0(alpha1_array_q0)
);

detectFaces_processImage_Pipeline_Filters_alpha2_array_ROM_AUTO_1R #(
    .DataWidth( 14 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
alpha2_array_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(alpha2_array_address0),
    .ce0(alpha2_array_ce0_local),
    .q0(alpha2_array_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array0_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array0_address0),
    .ce0(rectangles_array0_ce0_local),
    .q0(rectangles_array0_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array2_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array2_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array2_address0),
    .ce0(rectangles_array2_ce0_local),
    .q0(rectangles_array2_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array1_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array1_address0),
    .ce0(rectangles_array1_ce0_local),
    .q0(rectangles_array1_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array3_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array3_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array3_address0),
    .ce0(rectangles_array3_ce0_local),
    .q0(rectangles_array3_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array4_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array4_address0),
    .ce0(rectangles_array4_ce0_local),
    .q0(rectangles_array4_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array6_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array6_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array6_address0),
    .ce0(rectangles_array6_ce0_local),
    .q0(rectangles_array6_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array5_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array5_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array5_address0),
    .ce0(rectangles_array5_ce0_local),
    .q0(rectangles_array5_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array7_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array7_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array7_address0),
    .ce0(rectangles_array7_ce0_local),
    .q0(rectangles_array7_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array8_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array8_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array8_address0),
    .ce0(rectangles_array8_ce0_local),
    .q0(rectangles_array8_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array10_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array10_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array10_address0),
    .ce0(rectangles_array10_ce0_local),
    .q0(rectangles_array10_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array9_ROM_AUTO_1R #(
    .DataWidth( 5 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array9_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array9_address0),
    .ce0(rectangles_array9_ce0_local),
    .q0(rectangles_array9_q0)
);

detectFaces_processImage_Pipeline_Filters_rectangles_array11_ROM_AUTO_1R #(
    .DataWidth( 4 ),
    .AddressRange( 2913 ),
    .AddressWidth( 12 ))
rectangles_array11_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(rectangles_array11_address0),
    .ce0(rectangles_array11_ce0_local),
    .q0(rectangles_array11_q0)
);

detectFaces_mul_13s_27s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
mul_13s_27s_32_1_1_U24(
    .din0(weights_array0_load_reg_1804),
    .din1(add_ln370_reg_1799),
    .dout(mul_ln373_fu_561_p2)
);

detectFaces_mul_14ns_27s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
mul_14ns_27s_32_1_1_U25(
    .din0(sum2_fu_565_p0),
    .din1(newSecond_reg_1819),
    .dout(sum2_fu_565_p2)
);

detectFaces_mul_14ns_27s_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 27 ),
    .dout_WIDTH( 32 ))
mul_14ns_27s_32_1_1_U26(
    .din0(mul_ln373_1_fu_569_p0),
    .din1(add_ln371_reg_1809),
    .dout(mul_ln373_1_fu_569_p2)
);

detectFaces_mul_13s_16ns_29_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 13 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 29 ))
mul_13s_16ns_29_1_1_U27(
    .din0(tree_thresh_array_load_reg_1794),
    .din1(t_fu_1317_p1),
    .dout(t_fu_1317_p2)
);

detectFaces_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready_sig),
    .ap_done(ap_done_sig),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage0),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_exit_pp0_iter7_stage0)) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        if (((1'd0 == and_ln317_1_reg_1586_pp0_iter3_reg) & (icmp_ln283_reg_1459_pp0_iter3_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter5_storemerge_reg_550 <= 25'd0;
        end else if (((1'd1 == and_ln317_1_reg_1586_pp0_iter3_reg) & (icmp_ln283_reg_1459_pp0_iter3_reg == 1'd0))) begin
            ap_phi_reg_pp0_iter5_storemerge_reg_550 <= trunc_ln322_fu_1192_p1;
        end else if ((1'b1 == 1'b1)) begin
            ap_phi_reg_pp0_iter5_storemerge_reg_550 <= ap_phi_reg_pp0_iter4_storemerge_reg_550;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1316)) begin
        if ((1'd1 == and_ln317_1_reg_1586_pp0_iter3_reg)) begin
            cascadeClassifier_int_320_int_320_MyPoint_coord_8 <= trunc_ln319_reg_1709;
        end else if ((1'd0 == and_ln317_1_reg_1586_pp0_iter3_reg)) begin
            cascadeClassifier_int_320_int_320_MyPoint_coord_8 <= 25'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1316)) begin
        if ((1'd1 == and_ln317_1_reg_1586_pp0_iter3_reg)) begin
            cascadeClassifier_int_320_int_320_MyPoint_coord_9 <= trunc_ln320_fu_1167_p1;
        end else if ((1'd0 == and_ln317_1_reg_1586_pp0_iter3_reg)) begin
            cascadeClassifier_int_320_int_320_MyPoint_coord_9 <= 25'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if (((icmp_ln283_fu_599_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
            haar_counter_1_fu_124 <= add_ln339_fu_621_p2;
        end else if ((ap_loop_init == 1'b1)) begin
            haar_counter_1_fu_124 <= haar_counter;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            j_fu_120 <= 8'd0;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln283_reg_1459_pp0_iter6_reg == 1'd0))) begin
            j_fu_120 <= j_2_fu_1349_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_1316)) begin
        if ((1'd1 == and_ln317_1_reg_1586_pp0_iter3_reg)) begin
            p_ZZ17cascadeClassifierPA320_iS0_7MyPointE5coord_10 <= trunc_ln321_fu_1171_p1;
        end else if ((1'd0 == and_ln317_1_reg_1586_pp0_iter3_reg)) begin
            p_ZZ17cascadeClassifierPA320_iS0_7MyPointE5coord_10 <= 25'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        if (((ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            stage_sum_1_fu_116 <= stage_sum;
        end else if ((ap_enable_reg_pp0_iter8 == 1'b1)) begin
            stage_sum_1_fu_116 <= stage_sum_3_fu_1403_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln307_1_reg_1562[16 : 6] <= add_ln307_1_fu_712_p2[16 : 6];
        add_ln309_reg_1568 <= add_ln309_fu_718_p2;
        add_ln312_1_reg_1574[16 : 6] <= add_ln312_1_fu_748_p2[16 : 6];
        add_ln314_reg_1580 <= add_ln314_fu_754_p2;
        add_ln319_1_reg_1596 <= add_ln319_1_fu_883_p2;
        add_ln319_3_reg_1590[16 : 6] <= add_ln319_3_fu_877_p2[16 : 6];
        add_ln321_reg_1603 <= add_ln321_fu_888_p2;
        and_ln317_1_reg_1586 <= and_ln317_1_fu_842_p2;
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
        icmp_ln283_reg_1459 <= icmp_ln283_fu_599_p2;
        icmp_ln283_reg_1459_pp0_iter1_reg <= icmp_ln283_reg_1459;
        tr0_1_reg_1540 <= rectangles_array2_q0;
        tr0_reg_1533 <= tr0_fu_636_p2;
        tr1_1_reg_1552 <= rectangles_array6_q0;
        tr1_reg_1545 <= tr1_fu_658_p2;
        tr2_1_reg_1557 <= rectangles_array10_q0;
        zext_ln237_cast_reg_1454[15 : 0] <= zext_ln237_cast_fu_573_p1[15 : 0];
        zext_ln283_reg_1463[12 : 0] <= zext_ln283_fu_605_p1[12 : 0];
        zext_ln283_reg_1463_pp0_iter1_reg[12 : 0] <= zext_ln283_reg_1463[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        add_ln308_1_reg_1614 <= add_ln308_1_fu_917_p2;
        add_ln309_1_reg_1619 <= add_ln309_1_fu_950_p2;
        add_ln310_reg_1624 <= add_ln310_fu_955_p2;
        add_ln313_1_reg_1634 <= add_ln313_1_fu_975_p2;
        add_ln314_1_reg_1639 <= add_ln314_1_fu_1008_p2;
        add_ln315_reg_1644 <= add_ln315_fu_1013_p2;
        add_ln320_1_reg_1654 <= add_ln320_1_fu_1033_p2;
        add_ln321_1_reg_1659 <= add_ln321_1_fu_1066_p2;
        add_ln322_reg_1664 <= add_ln322_fu_1071_p2;
        add_ln370_reg_1799 <= add_ln370_fu_1237_p2;
        add_ln371_reg_1809 <= add_ln371_fu_1258_p2;
        and_ln317_1_reg_1586_pp0_iter2_reg <= and_ln317_1_reg_1586;
        and_ln317_1_reg_1586_pp0_iter3_reg <= and_ln317_1_reg_1586_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
        icmp_ln283_reg_1459_pp0_iter2_reg <= icmp_ln283_reg_1459_pp0_iter1_reg;
        icmp_ln283_reg_1459_pp0_iter3_reg <= icmp_ln283_reg_1459_pp0_iter2_reg;
        icmp_ln283_reg_1459_pp0_iter4_reg <= icmp_ln283_reg_1459_pp0_iter3_reg;
        icmp_ln283_reg_1459_pp0_iter5_reg <= icmp_ln283_reg_1459_pp0_iter4_reg;
        icmp_ln283_reg_1459_pp0_iter6_reg <= icmp_ln283_reg_1459_pp0_iter5_reg;
        icmp_ln285_reg_1859 <= icmp_ln285_fu_1355_p2;
        icmp_ln375_reg_1864 <= icmp_ln375_fu_1373_p2;
        mul_ln373_1_reg_1854 <= mul_ln373_1_fu_569_p2;
        mul_ln373_reg_1849 <= mul_ln373_fu_561_p2;
        newSecond_reg_1819 <= newSecond_fu_1308_p2;
        return_value_1_reg_1834 <= alpha2_array_q0;
        return_value_1_reg_1834_pp0_iter6_reg <= return_value_1_reg_1834;
        return_value_1_reg_1834_pp0_iter7_reg <= return_value_1_reg_1834_pp0_iter6_reg;
        return_value_reg_1829 <= alpha1_array_q0;
        return_value_reg_1829_pp0_iter6_reg <= return_value_reg_1829;
        return_value_reg_1829_pp0_iter7_reg <= return_value_reg_1829_pp0_iter6_reg;
        sub_ln370_reg_1759 <= sub_ln370_fu_1203_p2;
        sub_ln371_reg_1769 <= sub_ln371_fu_1216_p2;
        sum2_reg_1844 <= sum2_fu_565_p2;
        t_reg_1839 <= t_fu_1317_p2;
        tree_thresh_array_load_reg_1794 <= tree_thresh_array_q0;
        trunc_ln307_reg_1669 <= trunc_ln307_fu_1077_p1;
        trunc_ln309_reg_1729 <= trunc_ln309_fu_1129_p1;
        trunc_ln310_reg_1734 <= trunc_ln310_fu_1133_p1;
        trunc_ln312_reg_1689 <= trunc_ln312_fu_1093_p1;
        trunc_ln314_reg_1739 <= trunc_ln314_fu_1141_p1;
        trunc_ln315_reg_1744 <= trunc_ln315_fu_1145_p1;
        trunc_ln319_reg_1709 <= trunc_ln319_fu_1109_p1;
        weights_array0_load_reg_1804 <= weights_array0_q0;
        weights_array1_load_reg_1814 <= weights_array1_q0;
        weights_array2_load_reg_1824 <= weights_array2_q0;
        zext_ln283_reg_1463_pp0_iter2_reg[12 : 0] <= zext_ln283_reg_1463_pp0_iter1_reg[12 : 0];
        zext_ln283_reg_1463_pp0_iter3_reg[12 : 0] <= zext_ln283_reg_1463_pp0_iter2_reg[12 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter1_storemerge_reg_550 <= ap_phi_reg_pp0_iter0_storemerge_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_reg_pp0_iter2_storemerge_reg_550 <= ap_phi_reg_pp0_iter1_storemerge_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_reg_pp0_iter3_storemerge_reg_550 <= ap_phi_reg_pp0_iter2_storemerge_reg_550;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        ap_phi_reg_pp0_iter4_storemerge_reg_550 <= ap_phi_reg_pp0_iter3_storemerge_reg_550;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce0_local = 1'b1;
    end else begin
        SUM1_data_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        SUM1_data_ce10_local = 1'b1;
    end else begin
        SUM1_data_ce10_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        SUM1_data_ce11_local = 1'b1;
    end else begin
        SUM1_data_ce11_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce1_local = 1'b1;
    end else begin
        SUM1_data_ce1_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce2_local = 1'b1;
    end else begin
        SUM1_data_ce2_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce3_local = 1'b1;
    end else begin
        SUM1_data_ce3_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce4_local = 1'b1;
    end else begin
        SUM1_data_ce4_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce5_local = 1'b1;
    end else begin
        SUM1_data_ce5_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce6_local = 1'b1;
    end else begin
        SUM1_data_ce6_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce7_local = 1'b1;
    end else begin
        SUM1_data_ce7_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        SUM1_data_ce8_local = 1'b1;
    end else begin
        SUM1_data_ce8_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        SUM1_data_ce9_local = 1'b1;
    end else begin
        SUM1_data_ce9_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        alpha1_array_ce0_local = 1'b1;
    end else begin
        alpha1_array_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        alpha2_array_ce0_local = 1'b1;
    end else begin
        alpha2_array_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln283_fu_599_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln283_reg_1459_pp0_iter6_reg == 1'd1))) begin
        ap_condition_exit_pp0_iter7_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start_int == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_init == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_sig_allocacmp_haar_counter_2 = haar_counter;
    end else begin
        ap_sig_allocacmp_haar_counter_2 = haar_counter_1_fu_124;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array0_ce0_local = 1'b1;
    end else begin
        rectangles_array0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array10_ce0_local = 1'b1;
    end else begin
        rectangles_array10_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array11_ce0_local = 1'b1;
    end else begin
        rectangles_array11_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array1_ce0_local = 1'b1;
    end else begin
        rectangles_array1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array2_ce0_local = 1'b1;
    end else begin
        rectangles_array2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array3_ce0_local = 1'b1;
    end else begin
        rectangles_array3_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array4_ce0_local = 1'b1;
    end else begin
        rectangles_array4_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array5_ce0_local = 1'b1;
    end else begin
        rectangles_array5_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array6_ce0_local = 1'b1;
    end else begin
        rectangles_array6_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array7_ce0_local = 1'b1;
    end else begin
        rectangles_array7_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array8_ce0_local = 1'b1;
    end else begin
        rectangles_array8_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rectangles_array9_ce0_local = 1'b1;
    end else begin
        rectangles_array9_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln283_reg_1459_pp0_iter6_reg == 1'd1))) begin
        stage_sum_1_out_ap_vld = 1'b1;
    end else begin
        stage_sum_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        tree_thresh_array_ce0_local = 1'b1;
    end else begin
        tree_thresh_array_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_array0_ce0_local = 1'b1;
    end else begin
        weights_array0_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_array1_ce0_local = 1'b1;
    end else begin
        weights_array1_ce0_local = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1))) begin
        weights_array2_ce0_local = 1'b1;
    end else begin
        weights_array2_ce0_local = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign SUM1_data_address0 = zext_ln322_fu_1121_p1;

assign SUM1_data_address1 = zext_ln321_2_fu_1117_p1;

assign SUM1_data_address10 = zext_ln312_2_fu_965_p1;

assign SUM1_data_address11 = zext_ln307_2_fu_907_p1;

assign SUM1_data_address2 = zext_ln320_fu_1113_p1;

assign SUM1_data_address3 = zext_ln315_fu_1105_p1;

assign SUM1_data_address4 = zext_ln314_2_fu_1101_p1;

assign SUM1_data_address5 = zext_ln313_fu_1097_p1;

assign SUM1_data_address6 = zext_ln310_fu_1089_p1;

assign SUM1_data_address7 = zext_ln309_2_fu_1085_p1;

assign SUM1_data_address8 = zext_ln308_fu_1081_p1;

assign SUM1_data_address9 = zext_ln319_2_fu_1023_p1;

assign SUM1_data_ce0 = SUM1_data_ce0_local;

assign SUM1_data_ce1 = SUM1_data_ce1_local;

assign SUM1_data_ce10 = SUM1_data_ce10_local;

assign SUM1_data_ce11 = SUM1_data_ce11_local;

assign SUM1_data_ce2 = SUM1_data_ce2_local;

assign SUM1_data_ce3 = SUM1_data_ce3_local;

assign SUM1_data_ce4 = SUM1_data_ce4_local;

assign SUM1_data_ce5 = SUM1_data_ce5_local;

assign SUM1_data_ce6 = SUM1_data_ce6_local;

assign SUM1_data_ce7 = SUM1_data_ce7_local;

assign SUM1_data_ce8 = SUM1_data_ce8_local;

assign SUM1_data_ce9 = SUM1_data_ce9_local;

assign add_ln307_1_fu_712_p2 = (zext_ln307_fu_696_p1 + zext_ln307_1_fu_708_p1);

assign add_ln307_fu_903_p2 = (add_ln307_1_reg_1562 + tr0_reg_1533);

assign add_ln308_1_fu_917_p2 = (add_ln307_1_reg_1562 + add_ln308_fu_912_p2);

assign add_ln308_fu_912_p2 = (zext_ln276_fu_894_p1 + tr0_reg_1533);

assign add_ln309_1_fu_950_p2 = (add_ln309_2_fu_944_p2 + tr0_reg_1533);

assign add_ln309_2_fu_944_p2 = (zext_ln309_fu_929_p1 + zext_ln309_1_fu_940_p1);

assign add_ln309_fu_718_p2 = (zext_ln276_1_fu_650_p1 + tr0_2_fu_645_p2);

assign add_ln310_fu_955_p2 = (add_ln309_2_fu_944_p2 + add_ln308_fu_912_p2);

assign add_ln312_1_fu_748_p2 = (zext_ln312_fu_732_p1 + zext_ln312_1_fu_744_p1);

assign add_ln312_fu_961_p2 = (add_ln312_1_reg_1574 + tr1_reg_1545);

assign add_ln313_1_fu_975_p2 = (add_ln312_1_reg_1574 + add_ln313_fu_970_p2);

assign add_ln313_fu_970_p2 = (zext_ln276_2_fu_897_p1 + tr1_reg_1545);

assign add_ln314_1_fu_1008_p2 = (add_ln314_2_fu_1002_p2 + tr1_reg_1545);

assign add_ln314_2_fu_1002_p2 = (zext_ln314_fu_987_p1 + zext_ln314_1_fu_998_p1);

assign add_ln314_fu_754_p2 = (zext_ln276_3_fu_672_p1 + tr1_2_fu_667_p2);

assign add_ln315_fu_1013_p2 = (add_ln314_2_fu_1002_p2 + add_ln313_fu_970_p2);

assign add_ln319_1_fu_883_p2 = (zext_ln276_4_fu_676_p1 + empty);

assign add_ln319_2_fu_1019_p2 = (add_ln319_3_reg_1590 + add_ln319_1_reg_1596);

assign add_ln319_3_fu_877_p2 = (zext_ln319_fu_861_p1 + zext_ln319_1_fu_873_p1);

assign add_ln319_fu_848_p2 = (zext_ln276_6_fu_680_p1 + empty_13);

assign add_ln320_1_fu_1033_p2 = (add_ln319_3_reg_1590 + add_ln320_fu_1028_p2);

assign add_ln320_fu_1028_p2 = (zext_ln276_5_fu_900_p1 + add_ln319_1_reg_1596);

assign add_ln321_1_fu_1066_p2 = (add_ln321_2_fu_1060_p2 + add_ln319_1_reg_1596);

assign add_ln321_2_fu_1060_p2 = (zext_ln321_fu_1045_p1 + zext_ln321_1_fu_1056_p1);

assign add_ln321_fu_888_p2 = (zext_ln276_7_fu_684_p1 + add_ln319_fu_848_p2);

assign add_ln322_fu_1071_p2 = (add_ln321_2_fu_1060_p2 + add_ln320_fu_1028_p2);

assign add_ln339_fu_621_p2 = (ap_sig_allocacmp_haar_counter_2 + 13'd1);

assign add_ln370_fu_1237_p2 = (sub_ln370_1_fu_1228_p2 + zext_ln370_3_fu_1234_p1);

assign add_ln371_fu_1258_p2 = (sub_ln371_1_fu_1249_p2 + zext_ln371_3_fu_1255_p1);

assign add_ln373_fu_1364_p2 = (mul_ln373_1_reg_1854 + mul_ln373_reg_1849);

assign alpha1_array_address0 = zext_ln283_reg_1463_pp0_iter3_reg;

assign alpha2_array_address0 = zext_ln283_reg_1463_pp0_iter3_reg;

assign and_ln317_1_fu_842_p2 = (icmp_ln317_fu_818_p2 & and_ln317_fu_836_p2);

assign and_ln317_fu_836_p2 = (icmp_ln317_2_fu_830_p2 & icmp_ln317_1_fu_824_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_condition_1316 = ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln283_reg_1459_pp0_iter3_reg == 1'd0));
end

assign ap_done = ap_done_sig;

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start_int;

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage0;

assign ap_phi_reg_pp0_iter0_storemerge_reg_550 = 'bx;

assign ap_ready = ap_ready_sig;

assign final_sum_fu_1368_p2 = (add_ln373_fu_1364_p2 + sum2_reg_1844);

assign icmp_ln283_fu_599_p2 = ((trunc_ln283_fu_595_p1 == add_ln283) ? 1'b1 : 1'b0);

assign icmp_ln285_fu_1355_p2 = ((j_fu_120 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln317_1_fu_824_p2 = ((rectangles_array10_q0 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln317_2_fu_830_p2 = ((rectangles_array11_q0 != 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln317_fu_818_p2 = ((or_ln317_2_fu_812_p2 != 5'd0) ? 1'b1 : 1'b0);

assign icmp_ln375_fu_1373_p2 = (($signed(final_sum_fu_1368_p2) < $signed(sext_ln362_1_fu_1361_p1)) ? 1'b1 : 1'b0);

assign j_2_fu_1349_p2 = (j_fu_120 + 8'd1);

assign mul_ln373_1_fu_569_p0 = mul_ln373_1_fu_569_p00;

assign mul_ln373_1_fu_569_p00 = weights_array1_load_reg_1814;

assign newFirst_fu_1302_p2 = (zext_ln372_3_fu_1298_p1 - zext_ln372_2_fu_1294_p1);

assign newSecond_fu_1308_p2 = ($signed(sext_ln372_fu_1286_p1) + $signed(newFirst_fu_1302_p2));

assign or_ln317_1_fu_790_p2 = (trunc_ln317_1_fu_786_p1 | rectangles_array11_q0);

assign or_ln317_2_fu_812_p2 = (tmp2_fu_804_p3 | tmp1_fu_778_p3);

assign or_ln317_fu_764_p2 = (trunc_ln317_fu_760_p1 | rectangles_array10_q0);

assign rectangles_array0_address0 = zext_ln283_fu_605_p1;

assign rectangles_array10_address0 = zext_ln283_fu_605_p1;

assign rectangles_array11_address0 = zext_ln283_fu_605_p1;

assign rectangles_array1_address0 = zext_ln283_fu_605_p1;

assign rectangles_array2_address0 = zext_ln283_fu_605_p1;

assign rectangles_array3_address0 = zext_ln283_fu_605_p1;

assign rectangles_array4_address0 = zext_ln283_fu_605_p1;

assign rectangles_array5_address0 = zext_ln283_fu_605_p1;

assign rectangles_array6_address0 = zext_ln283_fu_605_p1;

assign rectangles_array7_address0 = zext_ln283_fu_605_p1;

assign rectangles_array8_address0 = zext_ln283_fu_605_p1;

assign rectangles_array9_address0 = zext_ln283_fu_605_p1;

assign return_value_3_fu_1394_p3 = ((icmp_ln375_reg_1864[0:0] == 1'b1) ? return_value_reg_1829_pp0_iter7_reg : return_value_1_reg_1834_pp0_iter7_reg);

assign sext_ln362_1_fu_1361_p1 = $signed(t_reg_1839);

assign sext_ln368_fu_1399_p1 = $signed(return_value_3_fu_1394_p3);

assign sext_ln370_fu_1222_p1 = $signed(sub_ln370_reg_1759);

assign sext_ln371_fu_1243_p1 = $signed(sub_ln371_reg_1769);

assign sext_ln372_fu_1286_p1 = $signed(sub_ln372_fu_1280_p2);

assign stage_sum_1_out = stage_sum_1_fu_116;

assign stage_sum_2_fu_1387_p3 = ((icmp_ln285_reg_1859[0:0] == 1'b1) ? 32'd0 : stage_sum_1_fu_116);

assign stage_sum_3_fu_1403_p2 = ($signed(sext_ln368_fu_1399_p1) + $signed(stage_sum_2_fu_1387_p3));

assign sub_ln370_1_fu_1228_p2 = ($signed(sext_ln370_fu_1222_p1) - $signed(zext_ln370_2_fu_1225_p1));

assign sub_ln370_fu_1203_p2 = (zext_ln370_fu_1196_p1 - zext_ln370_1_fu_1199_p1);

assign sub_ln371_1_fu_1249_p2 = ($signed(sext_ln371_fu_1243_p1) - $signed(zext_ln371_2_fu_1246_p1));

assign sub_ln371_fu_1216_p2 = (zext_ln371_fu_1209_p1 - zext_ln371_1_fu_1212_p1);

assign sub_ln372_fu_1280_p2 = (zext_ln372_fu_1268_p1 - zext_ln372_1_fu_1276_p1);

assign sum2_fu_565_p0 = sum2_fu_565_p00;

assign sum2_fu_565_p00 = weights_array2_load_reg_1824;

assign t_fu_1317_p1 = zext_ln237_cast_reg_1454;

assign tmp1_fu_778_p3 = {{tmp_10_fu_770_p3}, {or_ln317_fu_764_p2}};

assign tmp2_fu_804_p3 = {{tmp_11_fu_796_p3}, {or_ln317_1_fu_790_p2}};

assign tmp_10_fu_770_p3 = rectangles_array8_q0[32'd4];

assign tmp_11_fu_796_p3 = rectangles_array9_q0[32'd4];

assign tmp_12_fu_853_p3 = {{add_ln319_fu_848_p2}, {8'd0}};

assign tmp_13_fu_865_p3 = {{add_ln319_fu_848_p2}, {6'd0}};

assign tmp_14_fu_1038_p3 = {{add_ln321_reg_1603}, {8'd0}};

assign tmp_15_fu_1049_p3 = {{add_ln321_reg_1603}, {6'd0}};

assign tmp_2_fu_688_p3 = {{tr0_2_fu_645_p2}, {8'd0}};

assign tmp_3_fu_700_p3 = {{tr0_2_fu_645_p2}, {6'd0}};

assign tmp_4_fu_922_p3 = {{add_ln309_reg_1568}, {8'd0}};

assign tmp_5_fu_933_p3 = {{add_ln309_reg_1568}, {6'd0}};

assign tmp_6_fu_724_p3 = {{tr1_2_fu_667_p2}, {8'd0}};

assign tmp_7_fu_736_p3 = {{tr1_2_fu_667_p2}, {6'd0}};

assign tmp_8_fu_980_p3 = {{add_ln314_reg_1580}, {8'd0}};

assign tmp_9_fu_991_p3 = {{add_ln314_reg_1580}, {6'd0}};

assign tr0_2_fu_645_p2 = (zext_ln294_fu_641_p1 + empty_13);

assign tr0_fu_636_p2 = (zext_ln292_fu_632_p1 + empty);

assign tr1_2_fu_667_p2 = (zext_ln299_fu_663_p1 + empty_13);

assign tr1_fu_658_p2 = (zext_ln297_fu_654_p1 + empty);

assign tree_thresh_array_address0 = zext_ln283_reg_1463_pp0_iter3_reg;

assign trunc_ln283_fu_595_p1 = ap_sig_allocacmp_haar_counter_2[7:0];

assign trunc_ln307_fu_1077_p1 = SUM1_data_q11[24:0];

assign trunc_ln308_fu_1125_p1 = SUM1_data_q8[24:0];

assign trunc_ln309_fu_1129_p1 = SUM1_data_q7[24:0];

assign trunc_ln310_fu_1133_p1 = SUM1_data_q6[24:0];

assign trunc_ln312_fu_1093_p1 = SUM1_data_q10[24:0];

assign trunc_ln313_fu_1137_p1 = SUM1_data_q5[24:0];

assign trunc_ln314_fu_1141_p1 = SUM1_data_q4[24:0];

assign trunc_ln315_fu_1145_p1 = SUM1_data_q3[24:0];

assign trunc_ln317_1_fu_786_p1 = rectangles_array9_q0[3:0];

assign trunc_ln317_fu_760_p1 = rectangles_array8_q0[3:0];

assign trunc_ln319_fu_1109_p1 = SUM1_data_q9[24:0];

assign trunc_ln320_fu_1167_p1 = SUM1_data_q2[24:0];

assign trunc_ln321_fu_1171_p1 = SUM1_data_q1[24:0];

assign trunc_ln322_fu_1192_p1 = SUM1_data_q0[24:0];

assign weights_array0_address0 = zext_ln283_reg_1463_pp0_iter3_reg;

assign weights_array1_address0 = zext_ln283_reg_1463_pp0_iter3_reg;

assign weights_array2_address0 = zext_ln283_reg_1463_pp0_iter3_reg;

assign zext_ln237_cast_fu_573_p1 = zext_ln237;

assign zext_ln276_1_fu_650_p1 = rectangles_array3_q0;

assign zext_ln276_2_fu_897_p1 = tr1_1_reg_1552;

assign zext_ln276_3_fu_672_p1 = rectangles_array7_q0;

assign zext_ln276_4_fu_676_p1 = rectangles_array8_q0;

assign zext_ln276_5_fu_900_p1 = tr2_1_reg_1557;

assign zext_ln276_6_fu_680_p1 = rectangles_array9_q0;

assign zext_ln276_7_fu_684_p1 = rectangles_array11_q0;

assign zext_ln276_fu_894_p1 = tr0_1_reg_1540;

assign zext_ln283_fu_605_p1 = ap_sig_allocacmp_haar_counter_2;

assign zext_ln292_fu_632_p1 = rectangles_array0_q0;

assign zext_ln294_fu_641_p1 = rectangles_array1_q0;

assign zext_ln297_fu_654_p1 = rectangles_array4_q0;

assign zext_ln299_fu_663_p1 = rectangles_array5_q0;

assign zext_ln307_1_fu_708_p1 = tmp_3_fu_700_p3;

assign zext_ln307_2_fu_907_p1 = add_ln307_fu_903_p2;

assign zext_ln307_fu_696_p1 = tmp_2_fu_688_p3;

assign zext_ln308_fu_1081_p1 = add_ln308_1_reg_1614;

assign zext_ln309_1_fu_940_p1 = tmp_5_fu_933_p3;

assign zext_ln309_2_fu_1085_p1 = add_ln309_1_reg_1619;

assign zext_ln309_fu_929_p1 = tmp_4_fu_922_p3;

assign zext_ln310_fu_1089_p1 = add_ln310_reg_1624;

assign zext_ln312_1_fu_744_p1 = tmp_7_fu_736_p3;

assign zext_ln312_2_fu_965_p1 = add_ln312_fu_961_p2;

assign zext_ln312_fu_732_p1 = tmp_6_fu_724_p3;

assign zext_ln313_fu_1097_p1 = add_ln313_1_reg_1634;

assign zext_ln314_1_fu_998_p1 = tmp_9_fu_991_p3;

assign zext_ln314_2_fu_1101_p1 = add_ln314_1_reg_1639;

assign zext_ln314_fu_987_p1 = tmp_8_fu_980_p3;

assign zext_ln315_fu_1105_p1 = add_ln315_reg_1644;

assign zext_ln319_1_fu_873_p1 = tmp_13_fu_865_p3;

assign zext_ln319_2_fu_1023_p1 = add_ln319_2_fu_1019_p2;

assign zext_ln319_fu_861_p1 = tmp_12_fu_853_p3;

assign zext_ln320_fu_1113_p1 = add_ln320_1_reg_1654;

assign zext_ln321_1_fu_1056_p1 = tmp_15_fu_1049_p3;

assign zext_ln321_2_fu_1117_p1 = add_ln321_1_reg_1659;

assign zext_ln321_fu_1045_p1 = tmp_14_fu_1038_p3;

assign zext_ln322_fu_1121_p1 = add_ln322_reg_1664;

assign zext_ln370_1_fu_1199_p1 = trunc_ln308_fu_1125_p1;

assign zext_ln370_2_fu_1225_p1 = trunc_ln309_reg_1729;

assign zext_ln370_3_fu_1234_p1 = trunc_ln310_reg_1734;

assign zext_ln370_fu_1196_p1 = trunc_ln307_reg_1669;

assign zext_ln371_1_fu_1212_p1 = trunc_ln313_fu_1137_p1;

assign zext_ln371_2_fu_1246_p1 = trunc_ln314_reg_1739;

assign zext_ln371_3_fu_1255_p1 = trunc_ln315_reg_1744;

assign zext_ln371_fu_1209_p1 = trunc_ln312_reg_1689;

assign zext_ln372_1_fu_1276_p1 = cascadeClassifier_int_320_int_320_MyPoint_coord_9;

assign zext_ln372_2_fu_1294_p1 = p_ZZ17cascadeClassifierPA320_iS0_7MyPointE5coord_10;

assign zext_ln372_3_fu_1298_p1 = ap_phi_reg_pp0_iter5_storemerge_reg_550;

assign zext_ln372_fu_1268_p1 = cascadeClassifier_int_320_int_320_MyPoint_coord_8;

always @ (posedge ap_clk) begin
    zext_ln237_cast_reg_1454[28:16] <= 13'b0000000000000;
    zext_ln283_reg_1463[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1463_pp0_iter1_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1463_pp0_iter2_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    zext_ln283_reg_1463_pp0_iter3_reg[63:13] <= 51'b000000000000000000000000000000000000000000000000000;
    add_ln307_1_reg_1562[5:0] <= 6'b000000;
    add_ln312_1_reg_1574[5:0] <= 6'b000000;
    add_ln319_3_reg_1590[5:0] <= 6'b000000;
end

endmodule //detectFaces_processImage_Pipeline_Filters
